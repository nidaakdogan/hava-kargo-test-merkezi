{"ast":null,"code":"import React,{useState,useEffect}from'react';import{toast}from'react-toastify';import{FaBarcode,FaToggleOn,FaToggleOff,FaTrash,FaSync,FaInfoCircle,FaExclamationTriangle}from'react-icons/fa';import{counterSync}from'../services/CounterSyncService';import{eventBus}from'../services/ToastManager';import'./BarcodeScanner.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const BarcodeScanner=_ref=>{let{offlineQueue,onUpdate}=_ref;// 🎯 TEK KAYNAKLI DURUM MODELİ - 4 Ana State\nconst[offline,setOffline]=useState(false);// Her zaman false - sadece online mod\nconst[Q,setQ]=useState(0);// kuyruk: tamsayı\nconst[P,setP]=useState(0);// işleniyor: tamsayı\nconst[T,setT]=useState(0);// toplam: tamsayı\n// Appium durumu kontrolü\nconst[appiumConnected,setAppiumConnected]=useState(false);const[isProcessing,setIsProcessing]=useState(false);// Yardımcı state (UI için)\nconst[queueItems,setQueueItems]=useState([]);const[showClearModal,setShowClearModal]=useState(false);// Debounce koruma - 300ms\nconst[lastActionTime,setLastActionTime]=useState(0);const DEBOUNCE_DELAY=300;const testBarcodes=[{code:'ULD-AKE12345AB',type:'ULD',valid:true},{code:'123-45678901',type:'AWB',valid:true},{code:'ULD-ABC123',type:'ULD',valid:false},{code:'INVALID-CODE',type:'INVALID',valid:false}];// Appium sağlık kontrolü\nconst checkAppiumHealth=async()=>{try{// Timeout ve retry ile Appium kontrolü\nconst controller=new AbortController();const timeoutId=setTimeout(()=>controller.abort(),3000);// 3 saniye timeout\nconst response=await fetch('http://10.0.2.2:4723/wd/hub/status',{signal:controller.signal,method:'GET',headers:{'Accept':'application/json'}});clearTimeout(timeoutId);const isConnected=response.ok;setAppiumConnected(isConnected);if(!isConnected){eventBus.emit('appium:missing');}return isConnected;}catch(error){console.log('Appium bağlantı hatası:',error.message);setAppiumConnected(false);eventBus.emit('appium:missing');return false;}};// Retry mekanizması ile Appium kontrolü\nconst checkAppiumWithRetry=async function(){let retries=arguments.length>0&&arguments[0]!==undefined?arguments[0]:3;for(let i=0;i<retries;i++){const connected=await checkAppiumHealth();if(connected){return true;}if(i<retries-1){console.log(\"Appium retry \".concat(i+1,\"/\").concat(retries,\"...\"));await new Promise(resolve=>setTimeout(resolve,1000));// 1 saniye bekle\n}}return false;};// Debounce check fonksiyonu\nconst checkDebounce=()=>{const now=Date.now();if(now-lastActionTime<DEBOUNCE_DELAY){console.log('⚠️ Debounced - çok hızlı tıklama');return false;}setLastActionTime(now);return true;};// Aksiyon logu helper\nconst logAction=(action,before,after)=>{console.log(\"\".concat(action,\": \\xF6nce Q=\").concat(before.Q,\",P=\").concat(before.P,\",T=\").concat(before.T,\", offline=\").concat(before.offline,\" \\u2192 sonra Q=\").concat(after.Q,\",P=\").concat(after.P,\",T=\").concat(after.T,\", offline=\").concat(after.offline));};// Buton durumları hesaplama - BASİT MANTIK\nconst getButtonStates=()=>{const isAppiumConnected=appiumConnected;const isProcessingState=isProcessing||P>0;const hasQueue=Number(Q)>0;// String kontrolü\nconst isOffline=offline;// Debug değerleri ekrana yazdır\nconsole.log('🔍 DEBUG:',{Appium:isAppiumConnected?'✓':'×',Offline:isOffline?'✓':'×',Kuyruk:Q,Processing:isProcessingState?'✓':'×'});return{scanButton:{disabled:!isAppiumConnected||isProcessingState,tooltip:!isAppiumConnected?'Appium bağlı değil':isProcessingState?'İşlem devam ediyor':'Barkod tara/oku'},processButton:{disabled:!isAppiumConnected||isProcessingState||!isOffline||!hasQueue,tooltip:!isAppiumConnected?'Appium bağlı değil':isProcessingState?'İşlem devam ediyor':!isOffline?'Online modda kuyruk işlemesi yok':!hasQueue?'Kuyruk boş':'Kuyruğu işle'},clearButton:{disabled:!isAppiumConnected||isProcessingState||!isOffline||!hasQueue,tooltip:!isAppiumConnected?'Appium bağlı değil':isProcessingState?'İşlem devam ediyor':!isOffline?'Online modda kuyruk işlemesi yok':!hasQueue?'Kuyruk boş':'Kuyruğu temizle'}};};// Appium sağlık kontrolü başlatma\nuseEffect(()=>{// İlk kontrol retry ile\ncheckAppiumWithRetry();// Her 5 saniyede bir Appium durumunu kontrol et\nconst interval=setInterval(()=>{checkAppiumWithRetry();},5000);return()=>clearInterval(interval);},[]);// Kuyruğu temizle\nconst handleClearQueue=()=>{if(!checkDebounce())return;// Offline mod kontrolü\nif(!offline){console.log('🚫 Kuyruğu Temizle blocked: online mode');return;}if(Q===0){eventBus.emit('queue:empty');return;}const before={Q,P,T,offline};setQ(0);setQueueItems([]);const after={Q:0,P,T,offline};logAction('CLEAR_QUEUE',before,after);eventBus.emit('queue:cleared',{count:Q});};// Toggle fonksiyonu kaldırıldı - sadece online mod\n// Mobil testini bitir\nconst handleMobileTestComplete=async()=>{if(!checkDebounce())return;console.log(\"\\uD83D\\uDD04 Mobil Testini Bitir clicked: T=\".concat(T));try{// URL'den runId'yi al\nconst urlParams=new URLSearchParams(window.location.search);const runId=urlParams.get('runId');if(!runId){toast.error('❌ RunId bulunamadı');return;}// Backend'e mobil test tamamlandı isteği gönder\nconst response=await fetch('http://localhost:3001/api/mobile-test-completed',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({runId:runId,results:{passed:T,// Toplam başarılı barkod sayısı\nfailed:0,// Şimdilik 0, gerçek uygulamada hesaplanabilir\ntotal:T}})});if(response.ok){console.log('✅ Mobil test tamamlandı bildirildi');// 2 saniye sonra sayfayı yenile (opsiyonel)\nsetTimeout(()=>{window.location.reload();},2000);}else{throw new Error('Backend hatası');}}catch(error){console.error('❌ Mobil test tamamlandı hatası:',error);toast.error('❌ Test tamamlandı bildirilemedi');}};// 🔄 2) Barkod Tara / Oku\nconst simulateScan=async barcode=>{if(!checkDebounce())return;// Appium kontrolü\nif(!appiumConnected){eventBus.emit('appium:missing');return;}console.log(\"\\uD83D\\uDD04 Barkod Tara clicked: offline=\".concat(offline,\", Q=\").concat(Q,\", P=\").concat(P,\", T=\").concat(T,\", barcode=\").concat((barcode===null||barcode===void 0?void 0:barcode.code)||'manual'));const before={Q,P,T,offline};// Offline modda kuyruğa ekle\nif(offline){const newQ=Q+1;setQ(newQ);setQueueItems(prev=>[...prev,{id:Date.now(),code:(barcode===null||barcode===void 0?void 0:barcode.code)||'TEST-12345',timestamp:new Date()}]);const after={Q:newQ,P,T,offline};logAction('Barkod Kuyruğa Eklendi',before,after);eventBus.emit('queue:add');return;}// Online modda direkt işle\n// İşlem kilidi\nsetIsProcessing(true);setP(1);const afterStart={Q,P:1,T,offline};logAction('Barkod Tara (Online) - Başladı',before,afterStart);try{// Test barkodu yoksa varsayılan oluştur\nconst testBarcode=barcode||{code:'TEST-12345',valid:true};// Simülasyon - işleme süresi (1000ms)\nawait new Promise(resolve=>setTimeout(resolve,1000));// Sonuca göre:\nif(testBarcode.valid){// Başarılı: T = T + 1\nconst newT=T+1;setT(newT);add24hTotal(1);const afterSuccess={Q,P:0,T:newT,offline};setP(0);// P = 0 (işlem bitti)\nsetIsProcessing(false);// İşlem kilidi kaldır\nlogAction('Barkod Tara (Online) - Başarılı',afterStart,afterSuccess);// 150-300ms görünür tutma için toast'ı geciktir\nsetTimeout(()=>{toast.success(\"\\u2705 Barkod i\\u015Flendi (T=\".concat(newT,\")\"));eventBus.emit('barcode:ok',{code:testBarcode.code});},200);}else{// Başarısız: T değişmez\nsetP(0);// P = 0 (işlem bitti)\nsetIsProcessing(false);// İşlem kilidi kaldır\nconst afterFailed={Q,P:0,T,offline};logAction('Barkod Tara (Online) - Başarısız',afterStart,afterFailed);setTimeout(()=>{toast.error('❌ İşlem başarısız');eventBus.emit('barcode:fail');},200);}}catch(error){// Hata durumu: P = 0, T değişmez\nsetP(0);setIsProcessing(false);// İşlem kilidi kaldır\ntoast.error('❌ İşlem hatası');}};// 🔄 3) Kuyruğu İşle (yalnız offline ve Q>0 iken)\nconst processQueue=async()=>{if(!checkDebounce())return;// Appium kontrolü\nif(!appiumConnected){eventBus.emit('appium:missing');return;}// Offline mod kontrolü\nif(!offline){console.log('🚫 Kuyruğu İşle blocked: online mode');return;}console.log(\"\\uD83D\\uDD04 Kuyru\\u011Fu \\u0130\\u015Fle clicked: offline=\".concat(offline,\", Q=\").concat(Q,\", P=\").concat(P,\", T=\").concat(T));if(Q===0){eventBus.emit('queue:empty');return;}const before={Q,P,T,offline};const batchSize=5;let currentQ=Q;let currentT=T;// İşlem kilidi\nsetIsProcessing(true);setP(1);try{// Batch'ler halinde işle\nwhile(currentQ>0){// Parti başı: P = min(Q, batchSize)\nconst currentBatchSize=Math.min(currentQ,batchSize);setP(currentBatchSize);console.log(\"\\u26A1 Batch ba\\u015Flad\\u0131: P=\".concat(currentBatchSize,\", Q=\").concat(currentQ));// Simülasyon - batch işleme süresi\nawait new Promise(resolve=>setTimeout(resolve,2000));// Her öğe tamamlandıkça (simülasyon %85 başarı)\nconst successCount=Math.floor(currentBatchSize*0.85)||Math.min(1,currentBatchSize);for(let i=0;i<currentBatchSize;i++){if(i<successCount){// Başarılı: T = T + 1, Q = Q - 1, P = P - 1\ncurrentT++;setT(currentT);add24hTotal(1);}// Her durumda: Q = Q - 1, P = P - 1\ncurrentQ--;setQ(currentQ);setP(Math.max(0,currentBatchSize-i-1));// Kısa gecikme (UI'da değişimi görmek için)\nawait new Promise(resolve=>setTimeout(resolve,100));}console.log(\"\\u2705 Batch tamamland\\u0131: Q=\".concat(currentQ,\", T=\").concat(currentT,\", P=0\"));// Parti bitti: Q > 0 ise yeni parti; değilse P = 0 ve dur\nif(currentQ>0){console.log(\"\\uD83D\\uDD04 Yeni parti ba\\u015Fl\\u0131yor: Q=\".concat(currentQ));}}// Final durumu\nsetP(0);setIsProcessing(false);// İşlem kilidi kaldır\nconst after={Q:currentQ,P:0,T:currentT,offline};logAction('Kuyruğu İşle - Tamamlandı',before,after);// Kuyruğu temizle\nif(offlineQueue){await offlineQueue.clearQueue();await updateQueueItems();}toast.success(\"\\uD83C\\uDF89 Kuyruk i\\u015Flendi: \".concat(currentT-before.T,\" ba\\u015Far\\u0131l\\u0131\"));eventBus.emit('queue:result',{ok:currentT-before.T,fail:0});}catch(error){setP(0);setIsProcessing(false);// İşlem kilidi kaldır\ntoast.error('❌ Kuyruk işleme hatası');console.error('Kuyruk işleme hatası:',error);}};// 🔄 4) Kuyruğu Temizle (onaydan sonra)\nconst clearQueue=async()=>{if(!checkDebounce())return;console.log(\"\\uD83D\\uDD04 Kuyru\\u011Fu Temizle clicked: offline=\".concat(offline,\", Q=\").concat(Q,\", P=\").concat(P,\", T=\").concat(T));if(Q===0){console.log('🚫 Kuyruğu Temizle blocked: Q=0');toast.info('ℹ️ Kuyruk zaten boş');return;}const before={Q,P,T,offline};if(P===0){// P = 0 ise: Q = 0\nsetQ(0);// Kuyruğu temizle\nif(offlineQueue){await offlineQueue.clearQueue();await updateQueueItems();}const after={Q:0,P,T,offline};// T hiçbir koşulda değişmez\nlogAction('Kuyruğu Temizle',before,after);toast.success(\"\\uD83D\\uDDD1\\uFE0F Kuyruk temizlendi (\".concat(before.Q,\" kay\\u0131t)\"));}else{// P > 0 ise: önce işlemi iptal et → P = 0, sonra Q = 0\nsetP(0);// İşlemi iptal et\nsetQ(0);// Kuyruğu temizle\nif(offlineQueue){await offlineQueue.clearQueue();await updateQueueItems();}const after={Q:0,P:0,T,offline};// T hiçbir koşulda değişmez\nlogAction('Kuyruğu Temizle (İşlem İptal)',before,after);toast.success(\"\\uD83D\\uDED1 \\u0130\\u015Flem durduruldu ve kuyruk temizlendi (\".concat(before.Q,\" kay\\u0131t)\"));}};const updateQueueItems=async()=>{if(offlineQueue){const items=await offlineQueue.getQueue();setQueueItems(items);if(onUpdate)onUpdate();}};// Initialization - sayaçları senkronize et\nuseEffect(()=>{const initializeCounters=async()=>{if(offlineQueue){// Q: Kuyruk sayısı\nconst queue=await offlineQueue.getQueue();setQ(queue.length);setQueueItems(queue);// T: 24 saat toplam (localStorage'dan al)\nconst stored24h=JSON.parse(localStorage.getItem('24h_records')||'[]');setT(stored24h.length);// P: Başlangıçta 0\nsetP(0);console.log(\"\\uD83D\\uDD04 Initialized: Q=\".concat(queue.length,\", P=0, T=\").concat(stored24h.length,\", offline=\").concat(offline));}};initializeCounters();},[offlineQueue]);// 24 saatlik toplama ekleme (T artırmak için)\nconst add24hTotal=function(){let count=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;// Timestamp'li kayıt tut (rolling window için)\nconst now=new Date().toISOString();const records=JSON.parse(localStorage.getItem('24h_records')||'[]');for(let i=0;i<count;i++){records.push({timestamp:now});}// 24 saatten eski kayıtları temizle\nconst oneDayAgo=new Date(Date.now()-24*60*60*1000).toISOString();const filteredRecords=records.filter(record=>record.timestamp>oneDayAgo);localStorage.setItem('24h_records',JSON.stringify(filteredRecords));};// Render logu - her render'da\nconsole.log(\"\\uD83D\\uDD04 Render'da: render with offline=\".concat(offline,\", Q=\").concat(Q,\", P=\").concat(P,\", T=\").concat(T));return/*#__PURE__*/_jsxs(\"div\",{className:\"barcode-scanner\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"scanner-header\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"scanner-title\",children:\"Dijital \\u0130kiz Tabanl\\u0131 Test Sistemi\"}),/*#__PURE__*/_jsx(\"div\",{className:\"status-badge \".concat(offline?'offline':'online'),children:offline?'📱 Offline':'🌐 Online'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"stats-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"stats-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card queue\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:Q}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Kuyruk\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card processing\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:P}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"\\u0130\\u015Fleniyor\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card total\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:T}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Toplam\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-subtitle\",children:\"24 saat\"})]})]})}),/*#__PURE__*/_jsxs(\"div\",{style:{background:'#f0f0f0',padding:'10px',margin:'10px 0',borderRadius:'5px',fontSize:'12px',textAlign:'center'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"DEBUG:\"}),\" Appium: \",appiumConnected?'✓':'×',\" | Offline: \",offline?'✓':'×',\" | Kuyruk: \",Q,\" | Processing: \",isProcessing||P>0?'✓':'×']}),/*#__PURE__*/_jsx(\"div\",{className:\"toggle-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"toggle-container\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"toggle-label\",children:\"Offline Modu\"}),/*#__PURE__*/_jsx(\"button\",{className:\"toggle-btn \".concat(offline?'active':''),onClick:()=>setOffline(!offline),children:offline?/*#__PURE__*/_jsx(FaToggleOn,{}):/*#__PURE__*/_jsx(FaToggleOff,{})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"action-section\",children:(()=>{const buttonStates=getButtonStates();return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"button\",{className:\"action-btn primary\",onClick:simulateScan,disabled:buttonStates.scanButton.disabled,title:buttonStates.scanButton.tooltip,children:[/*#__PURE__*/_jsx(FaBarcode,{}),\"Barkod Tara/Oku\"]}),/*#__PURE__*/_jsxs(\"button\",{className:\"action-btn secondary\",onClick:processQueue,disabled:buttonStates.processButton.disabled,title:buttonStates.processButton.tooltip,children:[/*#__PURE__*/_jsx(FaSync,{className:P>0?'spinning':''}),P>0?'İşleniyor...':'Kuyruğu İşle',\" (\",Q,\")\"]}),/*#__PURE__*/_jsxs(\"button\",{className:\"action-btn danger\",onClick:handleClearQueue,disabled:buttonStates.clearButton.disabled,title:buttonStates.clearButton.tooltip,children:[/*#__PURE__*/_jsx(FaTrash,{}),\"Kuyru\\u011Fu Temizle\"]})]});})()}),/*#__PURE__*/_jsxs(\"div\",{className:\"test-section\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"section-title\",children:\"Test Barkodlar\\u0131\"}),/*#__PURE__*/_jsx(\"div\",{className:\"test-grid\",children:testBarcodes.map((barcode,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"test-card \".concat(barcode.valid?'valid':'invalid'),onClick:()=>simulateScan(barcode),onTouchStart:e=>{// iOS için touch feedback\ne.currentTarget.style.transform='scale(0.95)';},onTouchEnd:e=>{// Touch end'de normal haline dön\nsetTimeout(()=>{e.currentTarget.style.transform='';},150);},style:{cursor:'pointer',WebkitTapHighlightColor:'transparent'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"barcode-icon\",children:/*#__PURE__*/_jsx(FaBarcode,{})}),/*#__PURE__*/_jsxs(\"div\",{className:\"barcode-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"barcode-code\",children:barcode.code}),/*#__PURE__*/_jsx(\"div\",{className:\"barcode-type\",children:barcode.type}),/*#__PURE__*/_jsx(\"div\",{className:\"barcode-status \".concat(barcode.valid?'valid':'invalid'),children:barcode.valid?'✅ Geçerli':'❌ Geçersiz'})]})]},index))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"queue-section\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"queue-title\",children:[\"Kuyruk (\",queueItems.length,\")\"]}),queueItems.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"empty-queue\",children:[/*#__PURE__*/_jsx(FaInfoCircle,{}),/*#__PURE__*/_jsx(\"span\",{children:\"Kuyruk bo\\u015F\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"queue-list\",children:queueItems.map((item,index)=>{var _item$data,_item$data2,_item$data3,_item$data4,_item$data5,_item$data6,_item$data7;return/*#__PURE__*/_jsx(\"div\",{className:\"queue-item\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"item-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"item-barcode\",children:((_item$data=item.data)===null||_item$data===void 0?void 0:_item$data.barcode)||'N/A'}),/*#__PURE__*/_jsx(\"span\",{className:\"item-type\",children:((_item$data2=item.data)===null||_item$data2===void 0?void 0:_item$data2.type)||'scan'}),/*#__PURE__*/_jsxs(\"span\",{className:\"item-status \".concat(((_item$data3=item.data)===null||_item$data3===void 0?void 0:_item$data3.status)||'pending'),children:[((_item$data4=item.data)===null||_item$data4===void 0?void 0:_item$data4.status)==='pending'&&'⏳ Bekliyor',((_item$data5=item.data)===null||_item$data5===void 0?void 0:_item$data5.status)==='processing'&&'🔄 İşleniyor',((_item$data6=item.data)===null||_item$data6===void 0?void 0:_item$data6.status)==='success'&&'✅ Başarılı',((_item$data7=item.data)===null||_item$data7===void 0?void 0:_item$data7.status)==='error'&&'❌ Hatalı']})]})},item.id);})}),Q>=100&&/*#__PURE__*/_jsxs(\"div\",{className:\"long-queue-warning\",children:[/*#__PURE__*/_jsx(FaInfoCircle,{}),/*#__PURE__*/_jsx(\"span\",{children:\"Kuyruk b\\xFCy\\xFCk, arka planda g\\xF6nderiliyor...\"})]})]}),showClearModal&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Kuyru\\u011Fu temizle\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Kuyrukta \",/*#__PURE__*/_jsx(\"strong\",{children:Q}),\" kay\\u0131t var. Bu i\\u015Flem geri al\\u0131namaz.\"]}),P>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"warning-text\",children:[\"\\u26A0\\uFE0F \\u015Eu anda \",P,\" barkod i\\u015Fleniyor. \\u0130\\u015Flemi durdurup kuyru\\u011Fu temizlemek istiyor musunuz?\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:()=>setShowClearModal(false),children:\"Vazge\\xE7\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger\",onClick:()=>{clearQueue();setShowClearModal(false);},children:P>0?'Evet, durdur ve sil':'Evet, temizle'})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"mobile-test-complete-section\",children:/*#__PURE__*/_jsxs(\"button\",{className:\"mobile-test-complete-btn\",onClick:handleMobileTestComplete,disabled:P>0,title:P>0?'İşlem devam ediyor':'Mobil testini bitir ve sonuçları gönder',children:[/*#__PURE__*/_jsx(FaExclamationTriangle,{}),\"Mobil Testini Bitir\"]})})]});};export default BarcodeScanner;","map":{"version":3,"names":["React","useState","useEffect","toast","FaBarcode","FaToggleOn","FaToggleOff","FaTrash","FaSync","FaInfoCircle","FaExclamationTriangle","counterSync","eventBus","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","BarcodeScanner","_ref","offlineQueue","onUpdate","offline","setOffline","Q","setQ","P","setP","T","setT","appiumConnected","setAppiumConnected","isProcessing","setIsProcessing","queueItems","setQueueItems","showClearModal","setShowClearModal","lastActionTime","setLastActionTime","DEBOUNCE_DELAY","testBarcodes","code","type","valid","checkAppiumHealth","controller","AbortController","timeoutId","setTimeout","abort","response","fetch","signal","method","headers","clearTimeout","isConnected","ok","emit","error","console","log","message","checkAppiumWithRetry","retries","arguments","length","undefined","i","connected","concat","Promise","resolve","checkDebounce","now","Date","logAction","action","before","after","getButtonStates","isAppiumConnected","isProcessingState","hasQueue","Number","isOffline","Appium","Offline","Kuyruk","Processing","scanButton","disabled","tooltip","processButton","clearButton","interval","setInterval","clearInterval","handleClearQueue","count","handleMobileTestComplete","urlParams","URLSearchParams","window","location","search","runId","get","body","JSON","stringify","results","passed","failed","total","reload","Error","simulateScan","barcode","newQ","prev","id","timestamp","afterStart","testBarcode","newT","add24hTotal","afterSuccess","success","afterFailed","processQueue","batchSize","currentQ","currentT","currentBatchSize","Math","min","successCount","floor","max","clearQueue","updateQueueItems","fail","info","items","getQueue","initializeCounters","queue","stored24h","parse","localStorage","getItem","toISOString","records","push","oneDayAgo","filteredRecords","filter","record","setItem","className","children","style","background","padding","margin","borderRadius","fontSize","textAlign","onClick","buttonStates","title","map","index","onTouchStart","e","currentTarget","transform","onTouchEnd","cursor","WebkitTapHighlightColor","item","_item$data","_item$data2","_item$data3","_item$data4","_item$data5","_item$data6","_item$data7","data","status"],"sources":["C:/Users/NİDAA/Cargo Digital Twin Test Lab/mobile-app/src/components/BarcodeScanner.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { FaBarcode, FaToggleOn, FaToggleOff, FaTrash, FaSync, FaInfoCircle, FaExclamationTriangle } from 'react-icons/fa';\nimport { counterSync } from '../services/CounterSyncService';\nimport { eventBus } from '../services/ToastManager';\nimport './BarcodeScanner.css';\n\nconst BarcodeScanner = ({ offlineQueue, onUpdate }) => {\n  // 🎯 TEK KAYNAKLI DURUM MODELİ - 4 Ana State\n  const [offline, setOffline] = useState(false);  // Her zaman false - sadece online mod\n  const [Q, setQ] = useState(0);                  // kuyruk: tamsayı\n  const [P, setP] = useState(0);                  // işleniyor: tamsayı\n  const [T, setT] = useState(0);                  // toplam: tamsayı\n  \n  // Appium durumu kontrolü\n  const [appiumConnected, setAppiumConnected] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  \n  // Yardımcı state (UI için)\n  const [queueItems, setQueueItems] = useState([]);\n  const [showClearModal, setShowClearModal] = useState(false);\n  \n  // Debounce koruma - 300ms\n  const [lastActionTime, setLastActionTime] = useState(0);\n  const DEBOUNCE_DELAY = 300;\n\n  const testBarcodes = [\n    { code: 'ULD-AKE12345AB', type: 'ULD', valid: true },\n    { code: '123-45678901', type: 'AWB', valid: true },\n    { code: 'ULD-ABC123', type: 'ULD', valid: false },\n    { code: 'INVALID-CODE', type: 'INVALID', valid: false }\n  ];\n\n  // Appium sağlık kontrolü\n  const checkAppiumHealth = async () => {\n    try {\n      // Timeout ve retry ile Appium kontrolü\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 3000); // 3 saniye timeout\n      \n      const response = await fetch('http://10.0.2.2:4723/wd/hub/status', {\n        signal: controller.signal,\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n        }\n      });\n      \n      clearTimeout(timeoutId);\n      const isConnected = response.ok;\n      setAppiumConnected(isConnected);\n      \n      if (!isConnected) {\n        eventBus.emit('appium:missing');\n      }\n      \n      return isConnected;\n    } catch (error) {\n      console.log('Appium bağlantı hatası:', error.message);\n      setAppiumConnected(false);\n      eventBus.emit('appium:missing');\n      return false;\n    }\n  };\n\n  // Retry mekanizması ile Appium kontrolü\n  const checkAppiumWithRetry = async (retries = 3) => {\n    for (let i = 0; i < retries; i++) {\n      const connected = await checkAppiumHealth();\n      if (connected) {\n        return true;\n      }\n      if (i < retries - 1) {\n        console.log(`Appium retry ${i + 1}/${retries}...`);\n        await new Promise(resolve => setTimeout(resolve, 1000)); // 1 saniye bekle\n      }\n    }\n    return false;\n  };\n\n  // Debounce check fonksiyonu\n  const checkDebounce = () => {\n    const now = Date.now();\n    if (now - lastActionTime < DEBOUNCE_DELAY) {\n      console.log('⚠️ Debounced - çok hızlı tıklama');\n      return false;\n    }\n    setLastActionTime(now);\n    return true;\n  };\n\n  // Aksiyon logu helper\n  const logAction = (action, before, after) => {\n    console.log(`${action}: önce Q=${before.Q},P=${before.P},T=${before.T}, offline=${before.offline} → sonra Q=${after.Q},P=${after.P},T=${after.T}, offline=${after.offline}`);\n  };\n\n  // Buton durumları hesaplama - BASİT MANTIK\n  const getButtonStates = () => {\n    const isAppiumConnected = appiumConnected;\n    const isProcessingState = isProcessing || P > 0;\n    const hasQueue = Number(Q) > 0; // String kontrolü\n    const isOffline = offline;\n    \n    // Debug değerleri ekrana yazdır\n    console.log('🔍 DEBUG:', {\n      Appium: isAppiumConnected ? '✓' : '×',\n      Offline: isOffline ? '✓' : '×', \n      Kuyruk: Q,\n      Processing: isProcessingState ? '✓' : '×'\n    });\n    \n    return {\n      scanButton: {\n        disabled: !isAppiumConnected || isProcessingState,\n        tooltip: !isAppiumConnected ? 'Appium bağlı değil' : \n                isProcessingState ? 'İşlem devam ediyor' : 'Barkod tara/oku'\n      },\n      processButton: {\n        disabled: !isAppiumConnected || isProcessingState || !isOffline || !hasQueue,\n        tooltip: !isAppiumConnected ? 'Appium bağlı değil' :\n                isProcessingState ? 'İşlem devam ediyor' :\n                !isOffline ? 'Online modda kuyruk işlemesi yok' :\n                !hasQueue ? 'Kuyruk boş' : 'Kuyruğu işle'\n      },\n      clearButton: {\n        disabled: !isAppiumConnected || isProcessingState || !isOffline || !hasQueue,\n        tooltip: !isAppiumConnected ? 'Appium bağlı değil' :\n                isProcessingState ? 'İşlem devam ediyor' :\n                !isOffline ? 'Online modda kuyruk işlemesi yok' :\n                !hasQueue ? 'Kuyruk boş' : 'Kuyruğu temizle'\n      }\n    };\n  };\n\n  // Appium sağlık kontrolü başlatma\n  useEffect(() => {\n    // İlk kontrol retry ile\n    checkAppiumWithRetry();\n    \n    // Her 5 saniyede bir Appium durumunu kontrol et\n    const interval = setInterval(() => {\n      checkAppiumWithRetry();\n    }, 5000);\n    \n    return () => clearInterval(interval);\n  }, []);\n\n  // Kuyruğu temizle\n  const handleClearQueue = () => {\n    if (!checkDebounce()) return;\n    \n    // Offline mod kontrolü\n    if (!offline) {\n      console.log('🚫 Kuyruğu Temizle blocked: online mode');\n      return;\n    }\n    \n    if (Q === 0) {\n      eventBus.emit('queue:empty');\n      return;\n    }\n    \n    const before = { Q, P, T, offline };\n    setQ(0);\n    setQueueItems([]);\n    const after = { Q: 0, P, T, offline };\n    logAction('CLEAR_QUEUE', before, after);\n    \n    eventBus.emit('queue:cleared', { count: Q });\n  };\n\n  // Toggle fonksiyonu kaldırıldı - sadece online mod\n\n  // Mobil testini bitir\n  const handleMobileTestComplete = async () => {\n    if (!checkDebounce()) return;\n    \n    console.log(`🔄 Mobil Testini Bitir clicked: T=${T}`);\n    \n    try {\n      // URL'den runId'yi al\n      const urlParams = new URLSearchParams(window.location.search);\n      const runId = urlParams.get('runId');\n      \n      if (!runId) {\n        toast.error('❌ RunId bulunamadı');\n        return;\n      }\n\n      // Backend'e mobil test tamamlandı isteği gönder\n      const response = await fetch('http://localhost:3001/api/mobile-test-completed', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          runId: runId,\n          results: {\n            passed: T, // Toplam başarılı barkod sayısı\n            failed: 0, // Şimdilik 0, gerçek uygulamada hesaplanabilir\n            total: T\n          }\n        })\n      });\n\n      if (response.ok) {\n        console.log('✅ Mobil test tamamlandı bildirildi');\n        \n        // 2 saniye sonra sayfayı yenile (opsiyonel)\n        setTimeout(() => {\n          window.location.reload();\n        }, 2000);\n      } else {\n        throw new Error('Backend hatası');\n      }\n    } catch (error) {\n      console.error('❌ Mobil test tamamlandı hatası:', error);\n      toast.error('❌ Test tamamlandı bildirilemedi');\n    }\n  };\n\n  // 🔄 2) Barkod Tara / Oku\n  const simulateScan = async (barcode) => {\n    if (!checkDebounce()) return;\n    \n    // Appium kontrolü\n    if (!appiumConnected) {\n      eventBus.emit('appium:missing');\n      return;\n    }\n    \n    console.log(`🔄 Barkod Tara clicked: offline=${offline}, Q=${Q}, P=${P}, T=${T}, barcode=${barcode?.code || 'manual'}`);\n    \n    const before = { Q, P, T, offline };\n    \n    // Offline modda kuyruğa ekle\n    if (offline) {\n      const newQ = Q + 1;\n      setQ(newQ);\n      setQueueItems(prev => [...prev, { id: Date.now(), code: barcode?.code || 'TEST-12345', timestamp: new Date() }]);\n      \n      const after = { Q: newQ, P, T, offline };\n      logAction('Barkod Kuyruğa Eklendi', before, after);\n      \n      eventBus.emit('queue:add');\n      return;\n    }\n    \n    // Online modda direkt işle\n    // İşlem kilidi\n    setIsProcessing(true);\n    setP(1);\n    \n    const afterStart = { Q, P: 1, T, offline };\n    logAction('Barkod Tara (Online) - Başladı', before, afterStart);\n    \n    try {\n      // Test barkodu yoksa varsayılan oluştur\n      const testBarcode = barcode || { code: 'TEST-12345', valid: true };\n      \n      // Simülasyon - işleme süresi (1000ms)\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // Sonuca göre:\n      if (testBarcode.valid) {\n        // Başarılı: T = T + 1\n        const newT = T + 1;\n        setT(newT);\n        add24hTotal(1);\n        \n        const afterSuccess = { Q, P: 0, T: newT, offline };\n        setP(0); // P = 0 (işlem bitti)\n        setIsProcessing(false); // İşlem kilidi kaldır\n        logAction('Barkod Tara (Online) - Başarılı', afterStart, afterSuccess);\n        \n        // 150-300ms görünür tutma için toast'ı geciktir\n        setTimeout(() => {\n          toast.success(`✅ Barkod işlendi (T=${newT})`);\n          eventBus.emit('barcode:ok', { code: testBarcode.code });\n        }, 200);\n        \n      } else {\n        // Başarısız: T değişmez\n        setP(0); // P = 0 (işlem bitti)\n        setIsProcessing(false); // İşlem kilidi kaldır\n        \n        const afterFailed = { Q, P: 0, T, offline };\n        logAction('Barkod Tara (Online) - Başarısız', afterStart, afterFailed);\n        \n        setTimeout(() => {\n          toast.error('❌ İşlem başarısız');\n          eventBus.emit('barcode:fail');\n        }, 200);\n      }\n      \n    } catch (error) {\n      // Hata durumu: P = 0, T değişmez\n      setP(0);\n      setIsProcessing(false); // İşlem kilidi kaldır\n      toast.error('❌ İşlem hatası');\n    }\n  };\n\n  // 🔄 3) Kuyruğu İşle (yalnız offline ve Q>0 iken)\n  const processQueue = async () => {\n    if (!checkDebounce()) return;\n    \n    // Appium kontrolü\n    if (!appiumConnected) {\n      eventBus.emit('appium:missing');\n      return;\n    }\n    \n    // Offline mod kontrolü\n    if (!offline) {\n      console.log('🚫 Kuyruğu İşle blocked: online mode');\n      return;\n    }\n    \n    console.log(`🔄 Kuyruğu İşle clicked: offline=${offline}, Q=${Q}, P=${P}, T=${T}`);\n\n    if (Q === 0) {\n      eventBus.emit('queue:empty');\n      return;\n    }\n\n    const before = { Q, P, T, offline };\n    const batchSize = 5;\n    let currentQ = Q;\n    let currentT = T;\n    \n    // İşlem kilidi\n    setIsProcessing(true);\n    setP(1);\n    \n    try {\n      // Batch'ler halinde işle\n      while (currentQ > 0) {\n        // Parti başı: P = min(Q, batchSize)\n        const currentBatchSize = Math.min(currentQ, batchSize);\n        setP(currentBatchSize);\n        \n        console.log(`⚡ Batch başladı: P=${currentBatchSize}, Q=${currentQ}`);\n        \n        // Simülasyon - batch işleme süresi\n        await new Promise(resolve => setTimeout(resolve, 2000));\n        \n        // Her öğe tamamlandıkça (simülasyon %85 başarı)\n        const successCount = Math.floor(currentBatchSize * 0.85) || Math.min(1, currentBatchSize);\n        \n        for (let i = 0; i < currentBatchSize; i++) {\n          if (i < successCount) {\n            // Başarılı: T = T + 1, Q = Q - 1, P = P - 1\n            currentT++;\n            setT(currentT);\n            add24hTotal(1);\n          }\n          // Her durumda: Q = Q - 1, P = P - 1\n          currentQ--;\n          setQ(currentQ);\n          setP(Math.max(0, currentBatchSize - i - 1));\n          \n          // Kısa gecikme (UI'da değişimi görmek için)\n          await new Promise(resolve => setTimeout(resolve, 100));\n        }\n        \n        console.log(`✅ Batch tamamlandı: Q=${currentQ}, T=${currentT}, P=0`);\n        \n        // Parti bitti: Q > 0 ise yeni parti; değilse P = 0 ve dur\n        if (currentQ > 0) {\n          console.log(`🔄 Yeni parti başlıyor: Q=${currentQ}`);\n        }\n      }\n      \n      // Final durumu\n      setP(0);\n      setIsProcessing(false); // İşlem kilidi kaldır\n      const after = { Q: currentQ, P: 0, T: currentT, offline };\n      logAction('Kuyruğu İşle - Tamamlandı', before, after);\n      \n      // Kuyruğu temizle\n      if (offlineQueue) {\n        await offlineQueue.clearQueue();\n        await updateQueueItems();\n      }\n      \n      toast.success(`🎉 Kuyruk işlendi: ${currentT - before.T} başarılı`);\n      eventBus.emit('queue:result', { \n        ok: currentT - before.T, \n        fail: 0 \n      });\n    } catch (error) {\n      setP(0);\n      setIsProcessing(false); // İşlem kilidi kaldır\n      toast.error('❌ Kuyruk işleme hatası');\n      console.error('Kuyruk işleme hatası:', error);\n    }\n  };\n\n  // 🔄 4) Kuyruğu Temizle (onaydan sonra)\n  const clearQueue = async () => {\n    if (!checkDebounce()) return;\n    \n    console.log(`🔄 Kuyruğu Temizle clicked: offline=${offline}, Q=${Q}, P=${P}, T=${T}`);\n    \n    if (Q === 0) {\n      console.log('🚫 Kuyruğu Temizle blocked: Q=0');\n      toast.info('ℹ️ Kuyruk zaten boş');\n      return;\n    }\n    \n    const before = { Q, P, T, offline };\n    \n    if (P === 0) {\n      // P = 0 ise: Q = 0\n      setQ(0);\n\n  // Kuyruğu temizle\n      if (offlineQueue) {\n        await offlineQueue.clearQueue();\n        await updateQueueItems();\n      }\n      \n      const after = { Q: 0, P, T, offline }; // T hiçbir koşulda değişmez\n      logAction('Kuyruğu Temizle', before, after);\n      \n      toast.success(`🗑️ Kuyruk temizlendi (${before.Q} kayıt)`);\n      \n    } else {\n      // P > 0 ise: önce işlemi iptal et → P = 0, sonra Q = 0\n      setP(0); // İşlemi iptal et\n      setQ(0); // Kuyruğu temizle\n      \n      if (offlineQueue) {\n      await offlineQueue.clearQueue();\n        await updateQueueItems();\n      }\n      \n      const after = { Q: 0, P: 0, T, offline }; // T hiçbir koşulda değişmez\n      logAction('Kuyruğu Temizle (İşlem İptal)', before, after);\n      \n      toast.success(`🛑 İşlem durduruldu ve kuyruk temizlendi (${before.Q} kayıt)`);\n    }\n  };\n\n  const updateQueueItems = async () => {\n    if (offlineQueue) {\n      const items = await offlineQueue.getQueue();\n      setQueueItems(items);\n      if (onUpdate) onUpdate();\n    }\n  };\n\n  // Initialization - sayaçları senkronize et\n  useEffect(() => {\n    const initializeCounters = async () => {\n      if (offlineQueue) {\n        // Q: Kuyruk sayısı\n        const queue = await offlineQueue.getQueue();\n        setQ(queue.length);\n        setQueueItems(queue);\n        \n        // T: 24 saat toplam (localStorage'dan al)\n        const stored24h = JSON.parse(localStorage.getItem('24h_records') || '[]');\n        setT(stored24h.length);\n        \n        // P: Başlangıçta 0\n        setP(0);\n        \n        console.log(`🔄 Initialized: Q=${queue.length}, P=0, T=${stored24h.length}, offline=${offline}`);\n      }\n    };\n    \n    initializeCounters();\n  }, [offlineQueue]);\n\n  // 24 saatlik toplama ekleme (T artırmak için)\n  const add24hTotal = (count = 1) => {\n    // Timestamp'li kayıt tut (rolling window için)\n    const now = new Date().toISOString();\n    const records = JSON.parse(localStorage.getItem('24h_records') || '[]');\n    for (let i = 0; i < count; i++) {\n      records.push({ timestamp: now });\n    }\n    \n    // 24 saatten eski kayıtları temizle\n    const oneDayAgo = new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString();\n    const filteredRecords = records.filter(record => record.timestamp > oneDayAgo);\n    \n    localStorage.setItem('24h_records', JSON.stringify(filteredRecords));\n  };\n\n  // Render logu - her render'da\n  console.log(`🔄 Render'da: render with offline=${offline}, Q=${Q}, P=${P}, T=${T}`);\n\n  return (\n    <div className=\"barcode-scanner\">\n      {/* Header */}\n      <div className=\"scanner-header\">\n        <h1 className=\"scanner-title\">Dijital İkiz Tabanlı Test Sistemi</h1>\n        <div className={`status-badge ${offline ? 'offline' : 'online'}`}>\n          {offline ? '📱 Offline' : '🌐 Online'}\n        </div>\n      </div>\n\n      {/* Q/P/T Sayaç Kutucukları - TEK KAYNAKLI STATE */}\n      <div className=\"stats-section\">\n        <div className=\"stats-grid\">\n          <div className=\"stat-card queue\">\n            <div className=\"stat-value\">{Q}</div>\n            <div className=\"stat-label\">Kuyruk</div>\n          </div>\n          <div className=\"stat-card processing\">\n            <div className=\"stat-value\">{P}</div>\n            <div className=\"stat-label\">İşleniyor</div>\n          </div>\n          <div className=\"stat-card total\">\n            <div className=\"stat-value\">{T}</div>\n            <div className=\"stat-label\">Toplam</div>\n            <div className=\"stat-subtitle\">24 saat</div>\n          </div>\n        </div>\n      </div>\n\n      {/* DEBUG BİLGİLERİ */}\n      <div style={{\n        background: '#f0f0f0',\n        padding: '10px',\n        margin: '10px 0',\n        borderRadius: '5px',\n        fontSize: '12px',\n        textAlign: 'center'\n      }}>\n        <strong>DEBUG:</strong> Appium: {appiumConnected ? '✓' : '×'} | \n        Offline: {offline ? '✓' : '×'} | \n        Kuyruk: {Q} | \n        Processing: {(isProcessing || P > 0) ? '✓' : '×'}\n      </div>\n\n      {/* Offline Toggle */}\n      <div className=\"toggle-section\">\n        <div className=\"toggle-container\">\n          <span className=\"toggle-label\">Offline Modu</span>\n          <button \n            className={`toggle-btn ${offline ? 'active' : ''}`}\n            onClick={() => setOffline(!offline)}\n          >\n            {offline ? <FaToggleOn /> : <FaToggleOff />}\n          </button>\n        </div>\n      </div>\n\n      {/* Action Buttons - BUTON ETKİNLİK KURALLARI */}\n      <div className=\"action-section\">\n        {(() => {\n          const buttonStates = getButtonStates();\n          return (\n            <>\n              {/* Barkod Tara/Oku */}\n              <button \n                className=\"action-btn primary\"\n                onClick={simulateScan}\n                disabled={buttonStates.scanButton.disabled}\n                title={buttonStates.scanButton.tooltip}\n              >\n                <FaBarcode />\n                Barkod Tara/Oku\n              </button>\n\n              {/* Kuyruğu İşle */}\n              <button \n                className=\"action-btn secondary\"\n                onClick={processQueue}\n                disabled={buttonStates.processButton.disabled}\n                title={buttonStates.processButton.tooltip}\n              >\n                <FaSync className={P > 0 ? 'spinning' : ''} />\n                {P > 0 ? 'İşleniyor...' : 'Kuyruğu İşle'} ({Q})\n              </button>\n\n              {/* Kuyruğu Temizle */}\n              <button \n                className=\"action-btn danger\"\n                onClick={handleClearQueue}\n                disabled={buttonStates.clearButton.disabled}\n                title={buttonStates.clearButton.tooltip}\n              >\n                <FaTrash />\n                Kuyruğu Temizle\n              </button>\n            </>\n          );\n        })()}\n\n      </div>\n\n      {/* Test Barkodları */}\n      <div className=\"test-section\">\n        <h2 className=\"section-title\">Test Barkodları</h2>\n        <div className=\"test-grid\">\n          {testBarcodes.map((barcode, index) => (\n            <div \n              key={index}\n              className={`test-card ${barcode.valid ? 'valid' : 'invalid'}`}\n              onClick={() => simulateScan(barcode)}\n              onTouchStart={(e) => {\n                // iOS için touch feedback\n                e.currentTarget.style.transform = 'scale(0.95)';\n              }}\n              onTouchEnd={(e) => {\n                // Touch end'de normal haline dön\n                setTimeout(() => {\n                  e.currentTarget.style.transform = '';\n                }, 150);\n              }}\n              style={{\n                cursor: 'pointer',\n                WebkitTapHighlightColor: 'transparent'\n              }}\n            >\n              <div className=\"barcode-icon\">\n                <FaBarcode />\n              </div>\n              <div className=\"barcode-info\">\n              <div className=\"barcode-code\">{barcode.code}</div>\n              <div className=\"barcode-type\">{barcode.type}</div>\n                <div className={`barcode-status ${barcode.valid ? 'valid' : 'invalid'}`}>\n                  {barcode.valid ? '✅ Geçerli' : '❌ Geçersiz'}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Queue Items */}\n      <div className=\"queue-section\">\n        <h3 className=\"queue-title\">\n          Kuyruk ({queueItems.length})\n        </h3>\n        \n        {queueItems.length === 0 ? (\n          <div className=\"empty-queue\">\n            <FaInfoCircle />\n            <span>Kuyruk boş</span>\n          </div>\n        ) : (\n          <div className=\"queue-list\">\n            {queueItems.map((item, index) => (\n              <div key={item.id} className=\"queue-item\">\n                <div className=\"item-info\">\n                  <span className=\"item-barcode\">{item.data?.barcode || 'N/A'}</span>\n                  <span className=\"item-type\">{item.data?.type || 'scan'}</span>\n                  <span className={`item-status ${item.data?.status || 'pending'}`}>\n                    {item.data?.status === 'pending' && '⏳ Bekliyor'}\n                    {item.data?.status === 'processing' && '🔄 İşleniyor'}\n                    {item.data?.status === 'success' && '✅ Başarılı'}\n                    {item.data?.status === 'error' && '❌ Hatalı'}\n                    </span>\n                  </div>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {/* Uzun kuyruk uyarısı */}\n        {Q >= 100 && (\n          <div className=\"long-queue-warning\">\n            <FaInfoCircle />\n            <span>Kuyruk büyük, arka planda gönderiliyor...</span>\n          </div>\n        )}\n      </div>\n\n      {/* Temizleme Onay Modalı */}\n      {showClearModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal\">\n            <h4>Kuyruğu temizle</h4>\n            <p>Kuyrukta <strong>{Q}</strong> kayıt var. Bu işlem geri alınamaz.</p>\n            {P > 0 && (\n              <div className=\"warning-text\">\n                ⚠️ Şu anda {P} barkod işleniyor. İşlemi durdurup kuyruğu temizlemek istiyor musunuz?\n              </div>\n            )}\n            <div className=\"modal-buttons\">\n              <button \n                className=\"btn btn-secondary\"\n                onClick={() => setShowClearModal(false)}\n              >\n                Vazgeç\n              </button>\n              <button \n                className=\"btn btn-danger\"\n                onClick={() => {\n                  clearQueue();\n                  setShowClearModal(false);\n                }}\n              >\n                {P > 0 ? 'Evet, durdur ve sil' : 'Evet, temizle'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Mobil Testini Bitir Butonu */}\n      <div className=\"mobile-test-complete-section\">\n        <button \n          className=\"mobile-test-complete-btn\"\n          onClick={handleMobileTestComplete}\n          disabled={P > 0}\n          title={P > 0 ? 'İşlem devam ediyor' : 'Mobil testini bitir ve sonuçları gönder'}\n        >\n          <FaExclamationTriangle />\n          Mobil Testini Bitir\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default BarcodeScanner;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}