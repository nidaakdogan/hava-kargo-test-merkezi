{"ast":null,"code":"import _objectSpread from\"C:/Users/N\\u0130DAA/Cargo Digital Twin Test Lab/mobile-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{toast}from'react-toastify';import{FaBoxes,FaWeightHanging,FaExclamationTriangle,FaCheck,FaSave}from'react-icons/fa';import'./UldLoading.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UldLoading=_ref=>{let{offlineQueue}=_ref;const[formData,setFormData]=useState({uldCode:'',uldType:'',currentWeight:''});const[errors,setErrors]=useState({});const[touchedFields,setTouchedFields]=useState({});// Yeni: Hangi alanlar dokunuldu\nconst[maxWeight,setMaxWeight]=useState('');const[capacityUsage,setCapacityUsage]=useState('');// ULD tipleri ve maksimum ağırlıkları\nconst uldTypes=[{value:'AKE',name:'AKE - Container',maxWeight:1587},{value:'AKH',name:'AKH - Container',maxWeight:1587},{value:'PMC',name:'PMC - Pallet',maxWeight:6804},{value:'PAG',name:'PAG - Pallet',maxWeight:6804},{value:'PAJ',name:'PAJ - Pallet',maxWeight:6804},{value:'AKW',name:'AKW - Container',maxWeight:1587}];// ULD kod formatı validasyonu: 3 harf + 5 rakam + 2 harf\nconst validateUldCode=value=>{const regex=/^[A-Z]{3}\\d{5}[A-Z]{2}$/;return regex.test(value);};// Ağırlık validasyonu\nconst validateWeight=value=>{const num=parseFloat(value);return!isNaN(num)&&num>=0&&num<=maxWeight;};// ULD tipi değiştiğinde maksimum ağırlığı güncelle\nuseEffect(()=>{if(formData.uldType&&uldTypes.find(type=>type.value===formData.uldType)){const selectedType=uldTypes.find(type=>type.value===formData.uldType);setMaxWeight(selectedType?selectedType.maxWeight.toString():'0');}else{setMaxWeight(0);}},[formData.uldType]);// Mevcut ağırlık değiştiğinde kapasite kullanımını hesapla\nuseEffect(()=>{if(maxWeight>0&&formData.currentWeight){const usage=parseFloat(formData.currentWeight)/parseFloat(maxWeight)*100;setCapacityUsage(Math.min(usage,100));}else{setCapacityUsage(0);}},[formData.currentWeight,maxWeight]);// Kapasite uyarı seviyesi\nconst getCapacityWarning=()=>{if(capacityUsage>=100)return{level:'critical',text:'Kapasite aşıldı',color:'#EB5757'};if(capacityUsage>=90)return{level:'high',text:'Kapasite aşığı riski',color:'#EB5757'};if(capacityUsage>=80)return{level:'medium',text:'Uyarı',color:'#F2C94C'};return{level:'low',text:'Normal',color:'#28a745'};};// Form validasyonu\nconst validateForm=()=>{const newErrors={};if(!formData.uldCode.trim()){newErrors.uldCode='ULD kodu zorunludur';}else if(!validateUldCode(formData.uldCode)){newErrors.uldCode='Format: 3 harf + 5 rakam + 2 harf';}if(!formData.uldType){newErrors.uldType='ULD tipi seçilmelidir';}if(!formData.currentWeight.trim()){newErrors.currentWeight='Mevcut ağırlık zorunludur';}else if(!validateWeight(formData.currentWeight)){newErrors.currentWeight='Geçersiz ağırlık';}// Kapasite aşımı kontrolü\nif(capacityUsage>100){newErrors.currentWeight='Mevcut ağırlık maksimumu aşıyor';}setErrors(newErrors);return Object.keys(newErrors).length===0;};// Form gönderimi\nconst handleSubmit=async()=>{if(!validateForm())return;// Kapasite aşımı kontrolü\nif(capacityUsage>100){toast.error('❌ Mevcut ağırlık maksimumu aşıyor');return;}const uldData=_objectSpread(_objectSpread({},formData),{},{maxWeight,capacityUsage:Math.round(capacityUsage*100)/100,timestamp:new Date().toISOString(),status:'pending'});try{// Online mod - backend'e gönder\nconst response=await fetch('/api/uld/update',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(uldData)});if(response.ok){toast.success('✅ Kapasite bilgisi güncellendi');resetForm();}else{throw new Error('Backend error');}}catch(error){// Offline mod - kuyruğa ekle\nif(offlineQueue){await offlineQueue.addToQueue('uld_update',uldData);toast.info('ℹ️ Taslak olarak kaydedildi, internet gelince gönderilecek');resetForm();}else{toast.error('❌ İşlem tamamlanamadı. Tekrar deneyin.');}}};// Form temizleme\nconst resetForm=()=>{setFormData({uldCode:'',uldType:'',currentWeight:''});setErrors({});setTouchedFields({});setMaxWeight('');setCapacityUsage('');};// Input değişikliği\nconst handleInputChange=(field,value)=>{// Alan dokunuldu olarak işaretle\nsetTouchedFields(prev=>_objectSpread(_objectSpread({},prev),{},{[field]:true}));setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{[field]:value}));// Hataları temizle\nif(errors[field]){setErrors(prev=>_objectSpread(_objectSpread({},prev),{},{[field]:''}));}// ULD tipi değiştiğinde maksimum ağırlığı güncelle\nif(field==='uldType'){const selectedType=uldTypes.find(type=>type.value===value);if(selectedType){setMaxWeight(selectedType.maxWeight.toString());}else{setMaxWeight('');}setCapacityUsage('');}// Mevcut ağırlık değiştiğinde kapasite kullanımını hesapla\nif(field==='currentWeight'&&value&&maxWeight){const usage=(parseFloat(value)/parseFloat(maxWeight)*100).toFixed(1);setCapacityUsage(usage);}else if(field==='currentWeight'&&!value){setCapacityUsage('');}};// Input blur handler'ı - sadece blur'da hata göster\nconst handleInputBlur=(field,value)=>{// Alan dokunuldu olarak işaretle\nsetTouchedFields(prev=>_objectSpread(_objectSpread({},prev),{},{[field]:true}));// Blur'da validasyon yap\nlet error='';switch(field){case'uldCode':if(!value.trim()){error='ULD kodu zorunludur';}else if(!validateUldCode(value)){error='Geçersiz format';}break;case'uldType':if(!value.trim()){error='ULD tipi zorunludur';}break;case'currentWeight':if(!value.trim()){error='Mevcut ağırlık zorunludur';}else if(!validateWeight(value)){error='Sadece sayısal, en fazla 2 ondalık';}else if(maxWeight&&parseFloat(value)>parseFloat(maxWeight)){error='Maksimum ağırlığı aşıyor';}break;default:break;}setErrors(prev=>_objectSpread(_objectSpread({},prev),{},{[field]:error}));};const warning=getCapacityWarning();return/*#__PURE__*/_jsxs(\"div\",{className:\"uld-loading\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"uld-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"ULD Kapasite\"}),/*#__PURE__*/_jsx(\"p\",{className:\"uld-subtitle\",children:\"Sahada h\\u0131zl\\u0131 ULD do\\u011Frulama: kod, tip, mevcut a\\u011F\\u0131rl\\u0131k, kullan\\u0131m oran\\u0131 ve uyar\\u0131\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"ULD Bilgileri\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"uldCode\",children:\"ULD Kodu\"}),/*#__PURE__*/_jsx(\"input\",{id:\"uldCode\",type:\"text\",value:formData.uldCode,onChange:e=>handleInputChange('uldCode',e.target.value.toUpperCase()),onBlur:e=>handleInputBlur('uldCode',e.target.value),className:errors.uldCode||touchedFields.uldCode?'error':'',maxLength:10,autoComplete:\"off\"}),errors.uldCode&&/*#__PURE__*/_jsx(\"span\",{className:\"error-message\",children:errors.uldCode}),/*#__PURE__*/_jsx(\"div\",{className:\"field-help\",children:\"Format: 3 harf + 5 rakam + 2 harf\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"uldType\",children:\"ULD Tipi\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"uldType\",value:formData.uldType,onChange:e=>handleInputChange('uldType',e.target.value),onBlur:e=>handleInputBlur('uldType',e.target.value),className:errors.uldType||touchedFields.uldType?'error':'',autoComplete:\"off\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"ULD tipi se\\xE7in\"}),uldTypes.map(type=>/*#__PURE__*/_jsx(\"option\",{value:type.value,children:type.name},type.value))]}),errors.uldType&&/*#__PURE__*/_jsx(\"span\",{className:\"error-message\",children:errors.uldType})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"A\\u011F\\u0131rl\\u0131k & Kapasite\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"weight-display\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"weight-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Maksimum A\\u011F\\u0131rl\\u0131k (kg)\"}),/*#__PURE__*/_jsx(\"div\",{className:\"weight-value display-only\",children:maxWeight>0?maxWeight.toLocaleString():'-'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"weight-item\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"currentWeight\",children:\"Mevcut A\\u011F\\u0131rl\\u0131k (kg)\"}),/*#__PURE__*/_jsx(\"input\",{id:\"currentWeight\",type:\"number\",step:\"0.01\",value:formData.currentWeight,onChange:e=>handleInputChange('currentWeight',e.target.value),onBlur:e=>handleInputBlur('currentWeight',e.target.value),className:errors.currentWeight||touchedFields.currentWeight?'error':'',autoComplete:\"off\"}),errors.currentWeight&&/*#__PURE__*/_jsx(\"span\",{className:\"error-message\",children:errors.currentWeight})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"capacity-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"capacity-header\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Kapasite Kullan\\u0131m\\u0131\"}),/*#__PURE__*/_jsx(\"span\",{className:\"capacity-badge \".concat(warning.level),children:warning.text})]}),/*#__PURE__*/_jsx(\"div\",{className:\"capacity-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"capacity-fill\",style:{width:\"\".concat(Math.min(capacityUsage,100),\"%\"),backgroundColor:warning.color}})}),/*#__PURE__*/_jsx(\"div\",{className:\"capacity-percentage\",children:capacityUsage>0?\"\".concat(Math.round(capacityUsage*100)/100,\"%\"):'0%'}),capacityUsage>=100&&/*#__PURE__*/_jsxs(\"div\",{className:\"capacity-warning critical\",children:[/*#__PURE__*/_jsx(FaExclamationTriangle,{}),/*#__PURE__*/_jsx(\"span\",{children:\"Kapasite a\\u015F\\u0131ld\\u0131 - kaydetme engellendi\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-actions\",children:/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-primary\",onClick:handleSubmit,disabled:capacityUsage>100,children:[/*#__PURE__*/_jsx(FaSave,{}),\"G\\xFCncelle\"]})})]});};export default UldLoading;","map":{"version":3,"names":["React","useState","useEffect","toast","FaBoxes","FaWeightHanging","FaExclamationTriangle","FaCheck","FaSave","jsx","_jsx","jsxs","_jsxs","UldLoading","_ref","offlineQueue","formData","setFormData","uldCode","uldType","currentWeight","errors","setErrors","touchedFields","setTouchedFields","maxWeight","setMaxWeight","capacityUsage","setCapacityUsage","uldTypes","value","name","validateUldCode","regex","test","validateWeight","num","parseFloat","isNaN","find","type","selectedType","toString","usage","Math","min","getCapacityWarning","level","text","color","validateForm","newErrors","trim","Object","keys","length","handleSubmit","error","uldData","_objectSpread","round","timestamp","Date","toISOString","status","response","fetch","method","headers","body","JSON","stringify","ok","success","resetForm","Error","addToQueue","info","handleInputChange","field","prev","toFixed","handleInputBlur","warning","className","children","htmlFor","id","onChange","e","target","toUpperCase","onBlur","maxLength","autoComplete","map","toLocaleString","step","concat","style","width","backgroundColor","onClick","disabled"],"sources":["C:/Users/NİDAA/Cargo Digital Twin Test Lab/mobile-app/src/components/UldLoading.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { FaBoxes, FaWeightHanging, FaExclamationTriangle, FaCheck, FaSave } from 'react-icons/fa';\r\nimport './UldLoading.css';\r\n\r\nconst UldLoading = ({ offlineQueue }) => {\r\n  const [formData, setFormData] = useState({\r\n    uldCode: '',\r\n    uldType: '',\r\n    currentWeight: ''\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [touchedFields, setTouchedFields] = useState({}); // Yeni: Hangi alanlar dokunuldu\r\n  const [maxWeight, setMaxWeight] = useState('');\r\n  const [capacityUsage, setCapacityUsage] = useState('');\r\n\r\n  // ULD tipleri ve maksimum ağırlıkları\r\n  const uldTypes = [\r\n    { value: 'AKE', name: 'AKE - Container', maxWeight: 1587 },\r\n    { value: 'AKH', name: 'AKH - Container', maxWeight: 1587 },\r\n    { value: 'PMC', name: 'PMC - Pallet', maxWeight: 6804 },\r\n    { value: 'PAG', name: 'PAG - Pallet', maxWeight: 6804 },\r\n    { value: 'PAJ', name: 'PAJ - Pallet', maxWeight: 6804 },\r\n    { value: 'AKW', name: 'AKW - Container', maxWeight: 1587 }\r\n  ];\r\n\r\n  // ULD kod formatı validasyonu: 3 harf + 5 rakam + 2 harf\r\n  const validateUldCode = (value) => {\r\n    const regex = /^[A-Z]{3}\\d{5}[A-Z]{2}$/;\r\n    return regex.test(value);\r\n  };\r\n\r\n  // Ağırlık validasyonu\r\n  const validateWeight = (value) => {\r\n    const num = parseFloat(value);\r\n    return !isNaN(num) && num >= 0 && num <= maxWeight;\r\n  };\r\n\r\n  // ULD tipi değiştiğinde maksimum ağırlığı güncelle\r\n  useEffect(() => {\r\n    if (formData.uldType && uldTypes.find(type => type.value === formData.uldType)) {\r\n      const selectedType = uldTypes.find(type => type.value === formData.uldType);\r\n      setMaxWeight(selectedType ? selectedType.maxWeight.toString() : '0');\r\n    } else {\r\n      setMaxWeight(0);\r\n    }\r\n  }, [formData.uldType]);\r\n\r\n  // Mevcut ağırlık değiştiğinde kapasite kullanımını hesapla\r\n  useEffect(() => {\r\n    if (maxWeight > 0 && formData.currentWeight) {\r\n      const usage = (parseFloat(formData.currentWeight) / parseFloat(maxWeight)) * 100;\r\n      setCapacityUsage(Math.min(usage, 100));\r\n    } else {\r\n      setCapacityUsage(0);\r\n    }\r\n  }, [formData.currentWeight, maxWeight]);\r\n\r\n  // Kapasite uyarı seviyesi\r\n  const getCapacityWarning = () => {\r\n    if (capacityUsage >= 100) return { level: 'critical', text: 'Kapasite aşıldı', color: '#EB5757' };\r\n    if (capacityUsage >= 90) return { level: 'high', text: 'Kapasite aşığı riski', color: '#EB5757' };\r\n    if (capacityUsage >= 80) return { level: 'medium', text: 'Uyarı', color: '#F2C94C' };\r\n    return { level: 'low', text: 'Normal', color: '#28a745' };\r\n  };\r\n\r\n  // Form validasyonu\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n\r\n    if (!formData.uldCode.trim()) {\r\n      newErrors.uldCode = 'ULD kodu zorunludur';\r\n    } else if (!validateUldCode(formData.uldCode)) {\r\n      newErrors.uldCode = 'Format: 3 harf + 5 rakam + 2 harf';\r\n    }\r\n\r\n    if (!formData.uldType) {\r\n      newErrors.uldType = 'ULD tipi seçilmelidir';\r\n    }\r\n\r\n    if (!formData.currentWeight.trim()) {\r\n      newErrors.currentWeight = 'Mevcut ağırlık zorunludur';\r\n    } else if (!validateWeight(formData.currentWeight)) {\r\n      newErrors.currentWeight = 'Geçersiz ağırlık';\r\n    }\r\n\r\n    // Kapasite aşımı kontrolü\r\n    if (capacityUsage > 100) {\r\n      newErrors.currentWeight = 'Mevcut ağırlık maksimumu aşıyor';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  // Form gönderimi\r\n  const handleSubmit = async () => {\r\n    if (!validateForm()) return;\r\n\r\n    // Kapasite aşımı kontrolü\r\n    if (capacityUsage > 100) {\r\n      toast.error('❌ Mevcut ağırlık maksimumu aşıyor');\r\n      return;\r\n    }\r\n\r\n    const uldData = {\r\n      ...formData,\r\n      maxWeight,\r\n      capacityUsage: Math.round(capacityUsage * 100) / 100,\r\n      timestamp: new Date().toISOString(),\r\n      status: 'pending'\r\n    };\r\n\r\n    try {\r\n      // Online mod - backend'e gönder\r\n      const response = await fetch('/api/uld/update', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(uldData)\r\n      });\r\n\r\n      if (response.ok) {\r\n        toast.success('✅ Kapasite bilgisi güncellendi');\r\n        resetForm();\r\n      } else {\r\n        throw new Error('Backend error');\r\n      }\r\n    } catch (error) {\r\n      // Offline mod - kuyruğa ekle\r\n      if (offlineQueue) {\r\n        await offlineQueue.addToQueue('uld_update', uldData);\r\n        toast.info('ℹ️ Taslak olarak kaydedildi, internet gelince gönderilecek');\r\n        resetForm();\r\n      } else {\r\n        toast.error('❌ İşlem tamamlanamadı. Tekrar deneyin.');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Form temizleme\r\n  const resetForm = () => {\r\n    setFormData({\r\n      uldCode: '',\r\n      uldType: '',\r\n      currentWeight: ''\r\n    });\r\n    setErrors({});\r\n    setTouchedFields({});\r\n    setMaxWeight('');\r\n    setCapacityUsage('');\r\n  };\r\n\r\n  // Input değişikliği\r\n  const handleInputChange = (field, value) => {\r\n    // Alan dokunuldu olarak işaretle\r\n    setTouchedFields(prev => ({\r\n      ...prev,\r\n      [field]: true\r\n    }));\r\n\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n\r\n    // Hataları temizle\r\n    if (errors[field]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [field]: ''\r\n      }));\r\n    }\r\n\r\n    // ULD tipi değiştiğinde maksimum ağırlığı güncelle\r\n    if (field === 'uldType') {\r\n      const selectedType = uldTypes.find(type => type.value === value);\r\n      if (selectedType) {\r\n        setMaxWeight(selectedType.maxWeight.toString());\r\n      } else {\r\n        setMaxWeight('');\r\n      }\r\n      setCapacityUsage('');\r\n    }\r\n\r\n    // Mevcut ağırlık değiştiğinde kapasite kullanımını hesapla\r\n    if (field === 'currentWeight' && value && maxWeight) {\r\n      const usage = ((parseFloat(value) / parseFloat(maxWeight)) * 100).toFixed(1);\r\n      setCapacityUsage(usage);\r\n    } else if (field === 'currentWeight' && !value) {\r\n      setCapacityUsage('');\r\n    }\r\n  };\r\n\r\n  // Input blur handler'ı - sadece blur'da hata göster\r\n  const handleInputBlur = (field, value) => {\r\n    // Alan dokunuldu olarak işaretle\r\n    setTouchedFields(prev => ({\r\n      ...prev,\r\n      [field]: true\r\n    }));\r\n\r\n    // Blur'da validasyon yap\r\n    let error = '';\r\n    \r\n    switch (field) {\r\n      case 'uldCode':\r\n        if (!value.trim()) {\r\n          error = 'ULD kodu zorunludur';\r\n        } else if (!validateUldCode(value)) {\r\n          error = 'Geçersiz format';\r\n        }\r\n        break;\r\n      case 'uldType':\r\n        if (!value.trim()) {\r\n          error = 'ULD tipi zorunludur';\r\n        }\r\n        break;\r\n      case 'currentWeight':\r\n        if (!value.trim()) {\r\n          error = 'Mevcut ağırlık zorunludur';\r\n        } else if (!validateWeight(value)) {\r\n          error = 'Sadece sayısal, en fazla 2 ondalık';\r\n        } else if (maxWeight && parseFloat(value) > parseFloat(maxWeight)) {\r\n          error = 'Maksimum ağırlığı aşıyor';\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    setErrors(prev => ({\r\n      ...prev,\r\n      [field]: error\r\n    }));\r\n  };\r\n\r\n  const warning = getCapacityWarning();\r\n\r\n  return (\r\n    <div className=\"uld-loading\">\r\n      <div className=\"uld-header\">\r\n        <h2>ULD Kapasite</h2>\r\n        <p className=\"uld-subtitle\">Sahada hızlı ULD doğrulama: kod, tip, mevcut ağırlık, kullanım oranı ve uyarı</p>\r\n      </div>\r\n\r\n      {/* ULD Bilgileri */}\r\n      <div className=\"form-section\">\r\n        <h3>ULD Bilgileri</h3>\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"uldCode\">ULD Kodu</label>\r\n          <input\r\n            id=\"uldCode\"\r\n            type=\"text\"\r\n            value={formData.uldCode}\r\n            onChange={(e) => handleInputChange('uldCode', e.target.value.toUpperCase())}\r\n            onBlur={(e) => handleInputBlur('uldCode', e.target.value)}\r\n            className={errors.uldCode || touchedFields.uldCode ? 'error' : ''}\r\n            maxLength={10}\r\n            autoComplete=\"off\"\r\n          />\r\n          {errors.uldCode && (\r\n            <span className=\"error-message\">{errors.uldCode}</span>\r\n          )}\r\n          <div className=\"field-help\">\r\n            Format: 3 harf + 5 rakam + 2 harf\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"uldType\">ULD Tipi</label>\r\n          <select\r\n            id=\"uldType\"\r\n            value={formData.uldType}\r\n            onChange={(e) => handleInputChange('uldType', e.target.value)}\r\n            onBlur={(e) => handleInputBlur('uldType', e.target.value)}\r\n            className={errors.uldType || touchedFields.uldType ? 'error' : ''}\r\n            autoComplete=\"off\"\r\n          >\r\n            <option value=\"\">ULD tipi seçin</option>\r\n            {uldTypes.map((type) => (\r\n              <option key={type.value} value={type.value}>\r\n                {type.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {errors.uldType && (\r\n            <span className=\"error-message\">{errors.uldType}</span>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Ağırlık & Kapasite */}\r\n      <div className=\"form-section\">\r\n        <h3>Ağırlık & Kapasite</h3>\r\n        \r\n        <div className=\"weight-display\">\r\n          <div className=\"weight-item\">\r\n            <label>Maksimum Ağırlık (kg)</label>\r\n            <div className=\"weight-value display-only\">\r\n              {maxWeight > 0 ? maxWeight.toLocaleString() : '-'}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"weight-item\">\r\n            <label htmlFor=\"currentWeight\">Mevcut Ağırlık (kg)</label>\r\n            <input\r\n              id=\"currentWeight\"\r\n              type=\"number\"\r\n              step=\"0.01\"\r\n              value={formData.currentWeight}\r\n              onChange={(e) => handleInputChange('currentWeight', e.target.value)}\r\n              onBlur={(e) => handleInputBlur('currentWeight', e.target.value)}\r\n              className={errors.currentWeight || touchedFields.currentWeight ? 'error' : ''}\r\n              autoComplete=\"off\"\r\n            />\r\n            {errors.currentWeight && (\r\n              <span className=\"error-message\">{errors.currentWeight}</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Kapasite Kullanımı */}\r\n        <div className=\"capacity-section\">\r\n          <div className=\"capacity-header\">\r\n            <label>Kapasite Kullanımı</label>\r\n            <span className={`capacity-badge ${warning.level}`}>\r\n              {warning.text}\r\n            </span>\r\n          </div>\r\n          \r\n          <div className=\"capacity-bar\">\r\n            <div \r\n              className=\"capacity-fill\"\r\n              style={{ \r\n                width: `${Math.min(capacityUsage, 100)}%`,\r\n                backgroundColor: warning.color\r\n              }}\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"capacity-percentage\">\r\n            {capacityUsage > 0 ? `${Math.round(capacityUsage * 100) / 100}%` : '0%'}\r\n          </div>\r\n\r\n          {/* Kapasite aşımı uyarısı */}\r\n          {capacityUsage >= 100 && (\r\n            <div className=\"capacity-warning critical\">\r\n              <FaExclamationTriangle />\r\n              <span>Kapasite aşıldı - kaydetme engellendi</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Buton */}\r\n      <div className=\"form-actions\">\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          onClick={handleSubmit}\r\n          disabled={capacityUsage > 100}\r\n        >\r\n          <FaSave />\r\n          Güncelle\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UldLoading;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}