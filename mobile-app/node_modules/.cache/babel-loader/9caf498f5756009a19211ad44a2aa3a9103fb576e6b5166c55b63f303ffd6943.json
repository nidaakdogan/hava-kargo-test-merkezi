{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\N\\u0130DAA\\\\Cargo Digital Twin Test Lab\\\\mobile-app\\\\src\\\\components\\\\UldLoading.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { FaBoxes, FaWeightHanging, FaExclamationTriangle, FaCheck, FaSave } from 'react-icons/fa';\nimport './UldLoading.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UldLoading = ({\n  offlineQueue\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    uldCode: '',\n    uldType: '',\n    currentWeight: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [touchedFields, setTouchedFields] = useState({}); // Yeni: Hangi alanlar dokunuldu\n  const [maxWeight, setMaxWeight] = useState('');\n  const [capacityUsage, setCapacityUsage] = useState('');\n\n  // ULD tipleri ve maksimum ağırlıkları\n  const uldTypes = [{\n    value: 'AKE',\n    name: 'AKE - Container',\n    maxWeight: 1587\n  }, {\n    value: 'AKH',\n    name: 'AKH - Container',\n    maxWeight: 1587\n  }, {\n    value: 'PMC',\n    name: 'PMC - Pallet',\n    maxWeight: 6804\n  }, {\n    value: 'PAG',\n    name: 'PAG - Pallet',\n    maxWeight: 6804\n  }, {\n    value: 'PAJ',\n    name: 'PAJ - Pallet',\n    maxWeight: 6804\n  }, {\n    value: 'AKW',\n    name: 'AKW - Container',\n    maxWeight: 1587\n  }];\n\n  // ULD kod formatı validasyonu: 3 harf + 5 rakam + 2 harf\n  const validateUldCode = value => {\n    const regex = /^[A-Z]{3}\\d{5}[A-Z]{2}$/;\n    return regex.test(value);\n  };\n\n  // Ağırlık validasyonu\n  const validateWeight = value => {\n    const num = parseFloat(value);\n    return !isNaN(num) && num >= 0 && num <= maxWeight;\n  };\n\n  // ULD tipi değiştiğinde maksimum ağırlığı güncelle\n  useEffect(() => {\n    if (formData.uldType && uldTypes.find(type => type.value === formData.uldType)) {\n      const selectedType = uldTypes.find(type => type.value === formData.uldType);\n      setMaxWeight(selectedType ? selectedType.maxWeight.toString() : '0');\n    } else {\n      setMaxWeight(0);\n    }\n  }, [formData.uldType]);\n\n  // Mevcut ağırlık değiştiğinde kapasite kullanımını hesapla\n  useEffect(() => {\n    if (maxWeight > 0 && formData.currentWeight) {\n      const usage = parseFloat(formData.currentWeight) / parseFloat(maxWeight) * 100;\n      setCapacityUsage(Math.min(usage, 100));\n    } else {\n      setCapacityUsage(0);\n    }\n  }, [formData.currentWeight, maxWeight]);\n\n  // Kapasite uyarı seviyesi\n  const getCapacityWarning = () => {\n    if (capacityUsage >= 100) return {\n      level: 'critical',\n      text: 'Kapasite aşıldı',\n      color: '#EB5757'\n    };\n    if (capacityUsage >= 90) return {\n      level: 'high',\n      text: 'Kapasite aşığı riski',\n      color: '#EB5757'\n    };\n    if (capacityUsage >= 80) return {\n      level: 'medium',\n      text: 'Uyarı',\n      color: '#F2C94C'\n    };\n    return {\n      level: 'low',\n      text: 'Normal',\n      color: '#28a745'\n    };\n  };\n\n  // Form validasyonu\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.uldCode.trim()) {\n      newErrors.uldCode = 'ULD kodu zorunludur';\n    } else if (!validateUldCode(formData.uldCode)) {\n      newErrors.uldCode = 'Format: 3 harf + 5 rakam + 2 harf';\n    }\n    if (!formData.uldType) {\n      newErrors.uldType = 'ULD tipi seçilmelidir';\n    }\n    if (!formData.currentWeight.trim()) {\n      newErrors.currentWeight = 'Mevcut ağırlık zorunludur';\n    } else if (!validateWeight(formData.currentWeight)) {\n      newErrors.currentWeight = 'Geçersiz ağırlık';\n    }\n\n    // Kapasite aşımı kontrolü\n    if (capacityUsage > 100) {\n      newErrors.currentWeight = 'Mevcut ağırlık maksimumu aşıyor';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // Form gönderimi\n  const handleSubmit = async () => {\n    if (!validateForm()) return;\n\n    // Kapasite aşımı kontrolü\n    if (capacityUsage > 100) {\n      toast.error('❌ Mevcut ağırlık maksimumu aşıyor');\n      return;\n    }\n    const uldData = {\n      ...formData,\n      maxWeight,\n      capacityUsage: Math.round(capacityUsage * 100) / 100,\n      timestamp: new Date().toISOString(),\n      status: 'pending'\n    };\n    try {\n      // Online mod - backend'e gönder\n      const response = await fetch('/api/uld/update', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(uldData)\n      });\n      if (response.ok) {\n        toast.success('✅ Kapasite bilgisi güncellendi');\n        resetForm();\n      } else {\n        throw new Error('Backend error');\n      }\n    } catch (error) {\n      // Offline mod - kuyruğa ekle\n      if (offlineQueue) {\n        await offlineQueue.addToQueue('uld_update', uldData);\n        toast.info('ℹ️ Taslak olarak kaydedildi, internet gelince gönderilecek');\n        resetForm();\n      } else {\n        toast.error('❌ İşlem tamamlanamadı. Tekrar deneyin.');\n      }\n    }\n  };\n\n  // Form temizleme\n  const resetForm = () => {\n    setFormData({\n      uldCode: '',\n      uldType: '',\n      currentWeight: ''\n    });\n    setErrors({});\n    setTouchedFields({});\n    setMaxWeight('');\n    setCapacityUsage('');\n  };\n\n  // Input değişikliği\n  const handleInputChange = (field, value) => {\n    // Alan dokunuldu olarak işaretle\n    setTouchedFields(prev => ({\n      ...prev,\n      [field]: true\n    }));\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n\n    // Hataları temizle\n    if (errors[field]) {\n      setErrors(prev => ({\n        ...prev,\n        [field]: ''\n      }));\n    }\n\n    // ULD tipi değiştiğinde maksimum ağırlığı güncelle\n    if (field === 'uldType') {\n      const selectedType = uldTypes.find(type => type.value === value);\n      if (selectedType) {\n        setMaxWeight(selectedType.maxWeight.toString());\n      } else {\n        setMaxWeight('');\n      }\n      setCapacityUsage('');\n    }\n\n    // Mevcut ağırlık değiştiğinde kapasite kullanımını hesapla\n    if (field === 'currentWeight' && value && maxWeight) {\n      const usage = (parseFloat(value) / parseFloat(maxWeight) * 100).toFixed(1);\n      setCapacityUsage(usage);\n    } else if (field === 'currentWeight' && !value) {\n      setCapacityUsage('');\n    }\n  };\n\n  // Input blur handler'ı - sadece blur'da hata göster\n  const handleInputBlur = (field, value) => {\n    // Alan dokunuldu olarak işaretle\n    setTouchedFields(prev => ({\n      ...prev,\n      [field]: true\n    }));\n\n    // Blur'da validasyon yap\n    let error = '';\n    switch (field) {\n      case 'uldCode':\n        if (!value.trim()) {\n          error = 'ULD kodu zorunludur';\n        } else if (!validateUldCode(value)) {\n          error = 'Geçersiz format';\n        }\n        break;\n      case 'uldType':\n        if (!value.trim()) {\n          error = 'ULD tipi zorunludur';\n        }\n        break;\n      case 'currentWeight':\n        if (!value.trim()) {\n          error = 'Mevcut ağırlık zorunludur';\n        } else if (!validateWeight(value)) {\n          error = 'Sadece sayısal, en fazla 2 ondalık';\n        } else if (maxWeight && parseFloat(value) > parseFloat(maxWeight)) {\n          error = 'Maksimum ağırlığı aşıyor';\n        }\n        break;\n      default:\n        break;\n    }\n    setErrors(prev => ({\n      ...prev,\n      [field]: error\n    }));\n  };\n  const warning = getCapacityWarning();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"uld-loading\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uld-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"ULD Kapasite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"uld-subtitle\",\n        children: \"Sahada h\\u0131zl\\u0131 ULD do\\u011Frulama: kod, tip, mevcut a\\u011F\\u0131rl\\u0131k, kullan\\u0131m oran\\u0131 ve uyar\\u0131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"ULD Bilgileri\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"uldCode\",\n          children: \"ULD Kodu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"uldCode\",\n          type: \"text\",\n          value: formData.uldCode,\n          onChange: e => handleInputChange('uldCode', e.target.value.toUpperCase()),\n          onBlur: e => handleInputBlur('uldCode', e.target.value),\n          className: errors.uldCode || touchedFields.uldCode ? 'error' : '',\n          maxLength: 10,\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), errors.uldCode && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-message\",\n          children: errors.uldCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field-help\",\n          children: \"Format: 3 harf + 5 rakam + 2 harf\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"uldType\",\n          children: \"ULD Tipi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"uldType\",\n          value: formData.uldType,\n          onChange: e => handleInputChange('uldType', e.target.value),\n          onBlur: e => handleInputBlur('uldType', e.target.value),\n          className: errors.uldType || touchedFields.uldType ? 'error' : '',\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"ULD tipi se\\xE7in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), uldTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: type.value,\n            children: type.name\n          }, type.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), errors.uldType && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-message\",\n          children: errors.uldType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"A\\u011F\\u0131rl\\u0131k & Kapasite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weight-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weight-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Maksimum A\\u011F\\u0131rl\\u0131k (kg)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weight-value display-only\",\n            children: maxWeight > 0 ? maxWeight.toLocaleString() : '-'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weight-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"currentWeight\",\n            children: \"Mevcut A\\u011F\\u0131rl\\u0131k (kg)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"currentWeight\",\n            type: \"number\",\n            step: \"0.01\",\n            value: formData.currentWeight,\n            onChange: e => handleInputChange('currentWeight', e.target.value),\n            onBlur: e => handleInputBlur('currentWeight', e.target.value),\n            className: errors.currentWeight || touchedFields.currentWeight ? 'error' : '',\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), errors.currentWeight && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-message\",\n            children: errors.currentWeight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"capacity-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"capacity-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Kapasite Kullan\\u0131m\\u0131\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `capacity-badge ${warning.level}`,\n            children: warning.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"capacity-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"capacity-fill\",\n            style: {\n              width: `${Math.min(capacityUsage, 100)}%`,\n              backgroundColor: warning.color\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"capacity-percentage\",\n          children: capacityUsage > 0 ? `${Math.round(capacityUsage * 100) / 100}%` : '0%'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), capacityUsage >= 100 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"capacity-warning critical\",\n          children: [/*#__PURE__*/_jsxDEV(FaExclamationTriangle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Kapasite a\\u015F\\u0131ld\\u0131 - kaydetme engellendi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleSubmit,\n        disabled: capacityUsage > 100,\n        children: [/*#__PURE__*/_jsxDEV(FaSave, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), \"G\\xFCncelle\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 5\n  }, this);\n};\n_s(UldLoading, \"D9HYEWDXXbKwRGUkSV3RU+OZKkg=\");\n_c = UldLoading;\nexport default UldLoading;\nvar _c;\n$RefreshReg$(_c, \"UldLoading\");","map":{"version":3,"names":["React","useState","useEffect","toast","FaBoxes","FaWeightHanging","FaExclamationTriangle","FaCheck","FaSave","jsxDEV","_jsxDEV","UldLoading","offlineQueue","_s","formData","setFormData","uldCode","uldType","currentWeight","errors","setErrors","touchedFields","setTouchedFields","maxWeight","setMaxWeight","capacityUsage","setCapacityUsage","uldTypes","value","name","validateUldCode","regex","test","validateWeight","num","parseFloat","isNaN","find","type","selectedType","toString","usage","Math","min","getCapacityWarning","level","text","color","validateForm","newErrors","trim","Object","keys","length","handleSubmit","error","uldData","round","timestamp","Date","toISOString","status","response","fetch","method","headers","body","JSON","stringify","ok","success","resetForm","Error","addToQueue","info","handleInputChange","field","prev","toFixed","handleInputBlur","warning","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","e","target","toUpperCase","onBlur","maxLength","autoComplete","map","toLocaleString","step","style","width","backgroundColor","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/NİDAA/Cargo Digital Twin Test Lab/mobile-app/src/components/UldLoading.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { FaBoxes, FaWeightHanging, FaExclamationTriangle, FaCheck, FaSave } from 'react-icons/fa';\r\nimport './UldLoading.css';\r\n\r\nconst UldLoading = ({ offlineQueue }) => {\r\n  const [formData, setFormData] = useState({\r\n    uldCode: '',\r\n    uldType: '',\r\n    currentWeight: ''\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [touchedFields, setTouchedFields] = useState({}); // Yeni: Hangi alanlar dokunuldu\r\n  const [maxWeight, setMaxWeight] = useState('');\r\n  const [capacityUsage, setCapacityUsage] = useState('');\r\n\r\n  // ULD tipleri ve maksimum ağırlıkları\r\n  const uldTypes = [\r\n    { value: 'AKE', name: 'AKE - Container', maxWeight: 1587 },\r\n    { value: 'AKH', name: 'AKH - Container', maxWeight: 1587 },\r\n    { value: 'PMC', name: 'PMC - Pallet', maxWeight: 6804 },\r\n    { value: 'PAG', name: 'PAG - Pallet', maxWeight: 6804 },\r\n    { value: 'PAJ', name: 'PAJ - Pallet', maxWeight: 6804 },\r\n    { value: 'AKW', name: 'AKW - Container', maxWeight: 1587 }\r\n  ];\r\n\r\n  // ULD kod formatı validasyonu: 3 harf + 5 rakam + 2 harf\r\n  const validateUldCode = (value) => {\r\n    const regex = /^[A-Z]{3}\\d{5}[A-Z]{2}$/;\r\n    return regex.test(value);\r\n  };\r\n\r\n  // Ağırlık validasyonu\r\n  const validateWeight = (value) => {\r\n    const num = parseFloat(value);\r\n    return !isNaN(num) && num >= 0 && num <= maxWeight;\r\n  };\r\n\r\n  // ULD tipi değiştiğinde maksimum ağırlığı güncelle\r\n  useEffect(() => {\r\n    if (formData.uldType && uldTypes.find(type => type.value === formData.uldType)) {\r\n      const selectedType = uldTypes.find(type => type.value === formData.uldType);\r\n      setMaxWeight(selectedType ? selectedType.maxWeight.toString() : '0');\r\n    } else {\r\n      setMaxWeight(0);\r\n    }\r\n  }, [formData.uldType]);\r\n\r\n  // Mevcut ağırlık değiştiğinde kapasite kullanımını hesapla\r\n  useEffect(() => {\r\n    if (maxWeight > 0 && formData.currentWeight) {\r\n      const usage = (parseFloat(formData.currentWeight) / parseFloat(maxWeight)) * 100;\r\n      setCapacityUsage(Math.min(usage, 100));\r\n    } else {\r\n      setCapacityUsage(0);\r\n    }\r\n  }, [formData.currentWeight, maxWeight]);\r\n\r\n  // Kapasite uyarı seviyesi\r\n  const getCapacityWarning = () => {\r\n    if (capacityUsage >= 100) return { level: 'critical', text: 'Kapasite aşıldı', color: '#EB5757' };\r\n    if (capacityUsage >= 90) return { level: 'high', text: 'Kapasite aşığı riski', color: '#EB5757' };\r\n    if (capacityUsage >= 80) return { level: 'medium', text: 'Uyarı', color: '#F2C94C' };\r\n    return { level: 'low', text: 'Normal', color: '#28a745' };\r\n  };\r\n\r\n  // Form validasyonu\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n\r\n    if (!formData.uldCode.trim()) {\r\n      newErrors.uldCode = 'ULD kodu zorunludur';\r\n    } else if (!validateUldCode(formData.uldCode)) {\r\n      newErrors.uldCode = 'Format: 3 harf + 5 rakam + 2 harf';\r\n    }\r\n\r\n    if (!formData.uldType) {\r\n      newErrors.uldType = 'ULD tipi seçilmelidir';\r\n    }\r\n\r\n    if (!formData.currentWeight.trim()) {\r\n      newErrors.currentWeight = 'Mevcut ağırlık zorunludur';\r\n    } else if (!validateWeight(formData.currentWeight)) {\r\n      newErrors.currentWeight = 'Geçersiz ağırlık';\r\n    }\r\n\r\n    // Kapasite aşımı kontrolü\r\n    if (capacityUsage > 100) {\r\n      newErrors.currentWeight = 'Mevcut ağırlık maksimumu aşıyor';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  // Form gönderimi\r\n  const handleSubmit = async () => {\r\n    if (!validateForm()) return;\r\n\r\n    // Kapasite aşımı kontrolü\r\n    if (capacityUsage > 100) {\r\n      toast.error('❌ Mevcut ağırlık maksimumu aşıyor');\r\n      return;\r\n    }\r\n\r\n    const uldData = {\r\n      ...formData,\r\n      maxWeight,\r\n      capacityUsage: Math.round(capacityUsage * 100) / 100,\r\n      timestamp: new Date().toISOString(),\r\n      status: 'pending'\r\n    };\r\n\r\n    try {\r\n      // Online mod - backend'e gönder\r\n      const response = await fetch('/api/uld/update', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(uldData)\r\n      });\r\n\r\n      if (response.ok) {\r\n        toast.success('✅ Kapasite bilgisi güncellendi');\r\n        resetForm();\r\n      } else {\r\n        throw new Error('Backend error');\r\n      }\r\n    } catch (error) {\r\n      // Offline mod - kuyruğa ekle\r\n      if (offlineQueue) {\r\n        await offlineQueue.addToQueue('uld_update', uldData);\r\n        toast.info('ℹ️ Taslak olarak kaydedildi, internet gelince gönderilecek');\r\n        resetForm();\r\n      } else {\r\n        toast.error('❌ İşlem tamamlanamadı. Tekrar deneyin.');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Form temizleme\r\n  const resetForm = () => {\r\n    setFormData({\r\n      uldCode: '',\r\n      uldType: '',\r\n      currentWeight: ''\r\n    });\r\n    setErrors({});\r\n    setTouchedFields({});\r\n    setMaxWeight('');\r\n    setCapacityUsage('');\r\n  };\r\n\r\n  // Input değişikliği\r\n  const handleInputChange = (field, value) => {\r\n    // Alan dokunuldu olarak işaretle\r\n    setTouchedFields(prev => ({\r\n      ...prev,\r\n      [field]: true\r\n    }));\r\n\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n\r\n    // Hataları temizle\r\n    if (errors[field]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [field]: ''\r\n      }));\r\n    }\r\n\r\n    // ULD tipi değiştiğinde maksimum ağırlığı güncelle\r\n    if (field === 'uldType') {\r\n      const selectedType = uldTypes.find(type => type.value === value);\r\n      if (selectedType) {\r\n        setMaxWeight(selectedType.maxWeight.toString());\r\n      } else {\r\n        setMaxWeight('');\r\n      }\r\n      setCapacityUsage('');\r\n    }\r\n\r\n    // Mevcut ağırlık değiştiğinde kapasite kullanımını hesapla\r\n    if (field === 'currentWeight' && value && maxWeight) {\r\n      const usage = ((parseFloat(value) / parseFloat(maxWeight)) * 100).toFixed(1);\r\n      setCapacityUsage(usage);\r\n    } else if (field === 'currentWeight' && !value) {\r\n      setCapacityUsage('');\r\n    }\r\n  };\r\n\r\n  // Input blur handler'ı - sadece blur'da hata göster\r\n  const handleInputBlur = (field, value) => {\r\n    // Alan dokunuldu olarak işaretle\r\n    setTouchedFields(prev => ({\r\n      ...prev,\r\n      [field]: true\r\n    }));\r\n\r\n    // Blur'da validasyon yap\r\n    let error = '';\r\n    \r\n    switch (field) {\r\n      case 'uldCode':\r\n        if (!value.trim()) {\r\n          error = 'ULD kodu zorunludur';\r\n        } else if (!validateUldCode(value)) {\r\n          error = 'Geçersiz format';\r\n        }\r\n        break;\r\n      case 'uldType':\r\n        if (!value.trim()) {\r\n          error = 'ULD tipi zorunludur';\r\n        }\r\n        break;\r\n      case 'currentWeight':\r\n        if (!value.trim()) {\r\n          error = 'Mevcut ağırlık zorunludur';\r\n        } else if (!validateWeight(value)) {\r\n          error = 'Sadece sayısal, en fazla 2 ondalık';\r\n        } else if (maxWeight && parseFloat(value) > parseFloat(maxWeight)) {\r\n          error = 'Maksimum ağırlığı aşıyor';\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    setErrors(prev => ({\r\n      ...prev,\r\n      [field]: error\r\n    }));\r\n  };\r\n\r\n  const warning = getCapacityWarning();\r\n\r\n  return (\r\n    <div className=\"uld-loading\">\r\n      <div className=\"uld-header\">\r\n        <h2>ULD Kapasite</h2>\r\n        <p className=\"uld-subtitle\">Sahada hızlı ULD doğrulama: kod, tip, mevcut ağırlık, kullanım oranı ve uyarı</p>\r\n      </div>\r\n\r\n      {/* ULD Bilgileri */}\r\n      <div className=\"form-section\">\r\n        <h3>ULD Bilgileri</h3>\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"uldCode\">ULD Kodu</label>\r\n          <input\r\n            id=\"uldCode\"\r\n            type=\"text\"\r\n            value={formData.uldCode}\r\n            onChange={(e) => handleInputChange('uldCode', e.target.value.toUpperCase())}\r\n            onBlur={(e) => handleInputBlur('uldCode', e.target.value)}\r\n            className={errors.uldCode || touchedFields.uldCode ? 'error' : ''}\r\n            maxLength={10}\r\n            autoComplete=\"off\"\r\n          />\r\n          {errors.uldCode && (\r\n            <span className=\"error-message\">{errors.uldCode}</span>\r\n          )}\r\n          <div className=\"field-help\">\r\n            Format: 3 harf + 5 rakam + 2 harf\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"uldType\">ULD Tipi</label>\r\n          <select\r\n            id=\"uldType\"\r\n            value={formData.uldType}\r\n            onChange={(e) => handleInputChange('uldType', e.target.value)}\r\n            onBlur={(e) => handleInputBlur('uldType', e.target.value)}\r\n            className={errors.uldType || touchedFields.uldType ? 'error' : ''}\r\n            autoComplete=\"off\"\r\n          >\r\n            <option value=\"\">ULD tipi seçin</option>\r\n            {uldTypes.map((type) => (\r\n              <option key={type.value} value={type.value}>\r\n                {type.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {errors.uldType && (\r\n            <span className=\"error-message\">{errors.uldType}</span>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Ağırlık & Kapasite */}\r\n      <div className=\"form-section\">\r\n        <h3>Ağırlık & Kapasite</h3>\r\n        \r\n        <div className=\"weight-display\">\r\n          <div className=\"weight-item\">\r\n            <label>Maksimum Ağırlık (kg)</label>\r\n            <div className=\"weight-value display-only\">\r\n              {maxWeight > 0 ? maxWeight.toLocaleString() : '-'}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"weight-item\">\r\n            <label htmlFor=\"currentWeight\">Mevcut Ağırlık (kg)</label>\r\n            <input\r\n              id=\"currentWeight\"\r\n              type=\"number\"\r\n              step=\"0.01\"\r\n              value={formData.currentWeight}\r\n              onChange={(e) => handleInputChange('currentWeight', e.target.value)}\r\n              onBlur={(e) => handleInputBlur('currentWeight', e.target.value)}\r\n              className={errors.currentWeight || touchedFields.currentWeight ? 'error' : ''}\r\n              autoComplete=\"off\"\r\n            />\r\n            {errors.currentWeight && (\r\n              <span className=\"error-message\">{errors.currentWeight}</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Kapasite Kullanımı */}\r\n        <div className=\"capacity-section\">\r\n          <div className=\"capacity-header\">\r\n            <label>Kapasite Kullanımı</label>\r\n            <span className={`capacity-badge ${warning.level}`}>\r\n              {warning.text}\r\n            </span>\r\n          </div>\r\n          \r\n          <div className=\"capacity-bar\">\r\n            <div \r\n              className=\"capacity-fill\"\r\n              style={{ \r\n                width: `${Math.min(capacityUsage, 100)}%`,\r\n                backgroundColor: warning.color\r\n              }}\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"capacity-percentage\">\r\n            {capacityUsage > 0 ? `${Math.round(capacityUsage * 100) / 100}%` : '0%'}\r\n          </div>\r\n\r\n          {/* Kapasite aşımı uyarısı */}\r\n          {capacityUsage >= 100 && (\r\n            <div className=\"capacity-warning critical\">\r\n              <FaExclamationTriangle />\r\n              <span>Kapasite aşıldı - kaydetme engellendi</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Buton */}\r\n      <div className=\"form-actions\">\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          onClick={handleSubmit}\r\n          disabled={capacityUsage > 100}\r\n        >\r\n          <FaSave />\r\n          Güncelle\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UldLoading;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}