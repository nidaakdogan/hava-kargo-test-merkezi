{"ast":null,"code":"// üéØ ORTAK SAYA√á SENKRONƒ∞ZASYON SERVƒ∞Sƒ∞\n// Mobil ‚Üî Web ‚Üî API tam senkronizasyon\n\nexport class CounterSyncService {\n  constructor() {\n    // Mobil cihaz algƒ±lama\n    const isMobile = /Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    this.apiBaseUrl = isMobile ? 'http://10.0.2.2:3001' : 'http://localhost:3001';\n    this.listeners = new Set();\n    this.lastCounters = null;\n    this.syncInterval = null;\n    console.log(`üåê CounterSyncService API Base URL: ${this.apiBaseUrl} (Mobile: ${isMobile})`);\n  }\n\n  // Saya√ßlarƒ± API'den getir\n  async getCounters() {\n    try {\n      const response = await fetch(`${this.apiBaseUrl}/api/counters`);\n      if (response.ok) {\n        const data = await response.json();\n        return data.counters;\n      }\n      return null;\n    } catch (error) {\n      console.error('‚ùå Saya√ßlarƒ± getirirken hata:', error);\n      return null;\n    }\n  }\n\n  // Saya√ßlarƒ± API'ye g√∂nder\n  async updateCounters(counters) {\n    try {\n      const response = await fetch(`${this.apiBaseUrl}/api/counters`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(counters)\n      });\n      if (response.ok) {\n        const data = await response.json();\n        this.notifyListeners(data.counters);\n        return data.counters;\n      }\n      return null;\n    } catch (error) {\n      console.error('‚ùå Saya√ßlarƒ± g√ºncellerken hata:', error);\n      return null;\n    }\n  }\n\n  // Belirli bir sayacƒ± g√ºncelle\n  async updateCounter(key, value) {\n    const update = {\n      [key]: value\n    };\n    return await this.updateCounters(update);\n  }\n\n  // Otomatik senkronizasyon ba≈ülat (polling)\n  startAutoSync(intervalMs = 2000) {\n    if (this.syncInterval) {\n      clearInterval(this.syncInterval);\n    }\n    this.syncInterval = setInterval(async () => {\n      const counters = await this.getCounters();\n      if (counters && this.hasChanged(counters)) {\n        this.lastCounters = counters;\n        this.notifyListeners(counters);\n      }\n    }, intervalMs);\n  }\n\n  // Otomatik senkronizasyonu durdur\n  stopAutoSync() {\n    if (this.syncInterval) {\n      clearInterval(this.syncInterval);\n      this.syncInterval = null;\n    }\n  }\n\n  // Deƒüi≈üim kontrol√º\n  hasChanged(newCounters) {\n    if (!this.lastCounters) return true;\n    return this.lastCounters.Q !== newCounters.Q || this.lastCounters.P !== newCounters.P || this.lastCounters.T !== newCounters.T || this.lastCounters.offline !== newCounters.offline;\n  }\n\n  // Listener ekle (component'ler i√ßin)\n  addListener(callback) {\n    this.listeners.add(callback);\n    return () => this.listeners.delete(callback);\n  }\n\n  // Listener'lara bildir\n  notifyListeners(counters) {\n    this.listeners.forEach(callback => {\n      try {\n        callback(counters);\n      } catch (error) {\n        console.error('‚ùå Listener hatasƒ±:', error);\n      }\n    });\n  }\n\n  // Temizlik\n  destroy() {\n    this.stopAutoSync();\n    this.listeners.clear();\n  }\n}\n\n// Singleton instance\nexport const counterSync = new CounterSyncService();","map":{"version":3,"names":["CounterSyncService","constructor","isMobile","test","navigator","userAgent","apiBaseUrl","listeners","Set","lastCounters","syncInterval","console","log","getCounters","response","fetch","ok","data","json","counters","error","updateCounters","method","headers","body","JSON","stringify","notifyListeners","updateCounter","key","value","update","startAutoSync","intervalMs","clearInterval","setInterval","hasChanged","stopAutoSync","newCounters","Q","P","T","offline","addListener","callback","add","delete","forEach","destroy","clear","counterSync"],"sources":["C:/Users/Nƒ∞DAA/Cargo Digital Twin Test Lab/mobile-app/src/services/CounterSyncService.js"],"sourcesContent":["// üéØ ORTAK SAYA√á SENKRONƒ∞ZASYON SERVƒ∞Sƒ∞\r\n// Mobil ‚Üî Web ‚Üî API tam senkronizasyon\r\n\r\nexport class CounterSyncService {\r\n  constructor() {\r\n    // Mobil cihaz algƒ±lama\r\n    const isMobile = /Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    this.apiBaseUrl = isMobile ? 'http://10.0.2.2:3001' : 'http://localhost:3001';\r\n    \r\n    this.listeners = new Set();\r\n    this.lastCounters = null;\r\n    this.syncInterval = null;\r\n    \r\n    console.log(`üåê CounterSyncService API Base URL: ${this.apiBaseUrl} (Mobile: ${isMobile})`);\r\n  }\r\n\r\n  // Saya√ßlarƒ± API'den getir\r\n  async getCounters() {\r\n    try {\r\n      const response = await fetch(`${this.apiBaseUrl}/api/counters`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        return data.counters;\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      console.error('‚ùå Saya√ßlarƒ± getirirken hata:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Saya√ßlarƒ± API'ye g√∂nder\r\n  async updateCounters(counters) {\r\n    try {\r\n      const response = await fetch(`${this.apiBaseUrl}/api/counters`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(counters)\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        this.notifyListeners(data.counters);\r\n        return data.counters;\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      console.error('‚ùå Saya√ßlarƒ± g√ºncellerken hata:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Belirli bir sayacƒ± g√ºncelle\r\n  async updateCounter(key, value) {\r\n    const update = { [key]: value };\r\n    return await this.updateCounters(update);\r\n  }\r\n\r\n  // Otomatik senkronizasyon ba≈ülat (polling)\r\n  startAutoSync(intervalMs = 2000) {\r\n    if (this.syncInterval) {\r\n      clearInterval(this.syncInterval);\r\n    }\r\n\r\n    this.syncInterval = setInterval(async () => {\r\n      const counters = await this.getCounters();\r\n      if (counters && this.hasChanged(counters)) {\r\n        this.lastCounters = counters;\r\n        this.notifyListeners(counters);\r\n      }\r\n    }, intervalMs);\r\n  }\r\n\r\n  // Otomatik senkronizasyonu durdur\r\n  stopAutoSync() {\r\n    if (this.syncInterval) {\r\n      clearInterval(this.syncInterval);\r\n      this.syncInterval = null;\r\n    }\r\n  }\r\n\r\n  // Deƒüi≈üim kontrol√º\r\n  hasChanged(newCounters) {\r\n    if (!this.lastCounters) return true;\r\n    \r\n    return (\r\n      this.lastCounters.Q !== newCounters.Q ||\r\n      this.lastCounters.P !== newCounters.P ||\r\n      this.lastCounters.T !== newCounters.T ||\r\n      this.lastCounters.offline !== newCounters.offline\r\n    );\r\n  }\r\n\r\n  // Listener ekle (component'ler i√ßin)\r\n  addListener(callback) {\r\n    this.listeners.add(callback);\r\n    return () => this.listeners.delete(callback);\r\n  }\r\n\r\n  // Listener'lara bildir\r\n  notifyListeners(counters) {\r\n    this.listeners.forEach(callback => {\r\n      try {\r\n        callback(counters);\r\n      } catch (error) {\r\n        console.error('‚ùå Listener hatasƒ±:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Temizlik\r\n  destroy() {\r\n    this.stopAutoSync();\r\n    this.listeners.clear();\r\n  }\r\n}\r\n\r\n// Singleton instance\r\nexport const counterSync = new CounterSyncService();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}