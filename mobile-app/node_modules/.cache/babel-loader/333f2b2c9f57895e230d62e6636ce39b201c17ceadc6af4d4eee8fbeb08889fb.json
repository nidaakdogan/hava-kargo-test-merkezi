{"ast":null,"code":"// üéØ ORTAK SAYA√á SENKRONƒ∞ZASYON SERVƒ∞Sƒ∞\n// Mobil ‚Üî Web ‚Üî API tam senkronizasyon\nexport class CounterSyncService{constructor(){this.apiBaseUrl=process.env.NODE_ENV==='development'?'http://localhost:3001':'http://10.0.2.2:3001';this.listeners=new Set();this.lastCounters=null;this.syncInterval=null;}// Saya√ßlarƒ± API'den getir\nasync getCounters(){try{const response=await fetch(\"\".concat(this.apiBaseUrl,\"/api/counters\"));if(response.ok){const data=await response.json();return data.counters;}return null;}catch(error){console.error('‚ùå Saya√ßlarƒ± getirirken hata:',error);return null;}}// Saya√ßlarƒ± API'ye g√∂nder\nasync updateCounters(counters){try{const response=await fetch(\"\".concat(this.apiBaseUrl,\"/api/counters\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(counters)});if(response.ok){const data=await response.json();this.notifyListeners(data.counters);return data.counters;}return null;}catch(error){console.error('‚ùå Saya√ßlarƒ± g√ºncellerken hata:',error);return null;}}// Belirli bir sayacƒ± g√ºncelle\nasync updateCounter(key,value){const update={[key]:value};return await this.updateCounters(update);}// Otomatik senkronizasyon ba≈ülat (polling)\nstartAutoSync(){let intervalMs=arguments.length>0&&arguments[0]!==undefined?arguments[0]:2000;if(this.syncInterval){clearInterval(this.syncInterval);}this.syncInterval=setInterval(async()=>{const counters=await this.getCounters();if(counters&&this.hasChanged(counters)){this.lastCounters=counters;this.notifyListeners(counters);}},intervalMs);}// Otomatik senkronizasyonu durdur\nstopAutoSync(){if(this.syncInterval){clearInterval(this.syncInterval);this.syncInterval=null;}}// Deƒüi≈üim kontrol√º\nhasChanged(newCounters){if(!this.lastCounters)return true;return this.lastCounters.Q!==newCounters.Q||this.lastCounters.P!==newCounters.P||this.lastCounters.T!==newCounters.T||this.lastCounters.offline!==newCounters.offline;}// Listener ekle (component'ler i√ßin)\naddListener(callback){this.listeners.add(callback);return()=>this.listeners.delete(callback);}// Listener'lara bildir\nnotifyListeners(counters){this.listeners.forEach(callback=>{try{callback(counters);}catch(error){console.error('‚ùå Listener hatasƒ±:',error);}});}// Temizlik\ndestroy(){this.stopAutoSync();this.listeners.clear();}}// Singleton instance\nexport const counterSync=new CounterSyncService();","map":{"version":3,"names":["CounterSyncService","constructor","apiBaseUrl","process","env","NODE_ENV","listeners","Set","lastCounters","syncInterval","getCounters","response","fetch","concat","ok","data","json","counters","error","console","updateCounters","method","headers","body","JSON","stringify","notifyListeners","updateCounter","key","value","update","startAutoSync","intervalMs","arguments","length","undefined","clearInterval","setInterval","hasChanged","stopAutoSync","newCounters","Q","P","T","offline","addListener","callback","add","delete","forEach","destroy","clear","counterSync"],"sources":["C:/Users/Nƒ∞DAA/Cargo Digital Twin Test Lab/mobile-app/src/services/CounterSyncService.js"],"sourcesContent":["// üéØ ORTAK SAYA√á SENKRONƒ∞ZASYON SERVƒ∞Sƒ∞\r\n// Mobil ‚Üî Web ‚Üî API tam senkronizasyon\r\n\r\nexport class CounterSyncService {\r\n  constructor() {\r\n    this.apiBaseUrl = process.env.NODE_ENV === 'development' \r\n      ? 'http://localhost:3001' \r\n      : 'http://10.0.2.2:3001';\r\n    \r\n    this.listeners = new Set();\r\n    this.lastCounters = null;\r\n    this.syncInterval = null;\r\n  }\r\n\r\n  // Saya√ßlarƒ± API'den getir\r\n  async getCounters() {\r\n    try {\r\n      const response = await fetch(`${this.apiBaseUrl}/api/counters`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        return data.counters;\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      console.error('‚ùå Saya√ßlarƒ± getirirken hata:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Saya√ßlarƒ± API'ye g√∂nder\r\n  async updateCounters(counters) {\r\n    try {\r\n      const response = await fetch(`${this.apiBaseUrl}/api/counters`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(counters)\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        this.notifyListeners(data.counters);\r\n        return data.counters;\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      console.error('‚ùå Saya√ßlarƒ± g√ºncellerken hata:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Belirli bir sayacƒ± g√ºncelle\r\n  async updateCounter(key, value) {\r\n    const update = { [key]: value };\r\n    return await this.updateCounters(update);\r\n  }\r\n\r\n  // Otomatik senkronizasyon ba≈ülat (polling)\r\n  startAutoSync(intervalMs = 2000) {\r\n    if (this.syncInterval) {\r\n      clearInterval(this.syncInterval);\r\n    }\r\n\r\n    this.syncInterval = setInterval(async () => {\r\n      const counters = await this.getCounters();\r\n      if (counters && this.hasChanged(counters)) {\r\n        this.lastCounters = counters;\r\n        this.notifyListeners(counters);\r\n      }\r\n    }, intervalMs);\r\n  }\r\n\r\n  // Otomatik senkronizasyonu durdur\r\n  stopAutoSync() {\r\n    if (this.syncInterval) {\r\n      clearInterval(this.syncInterval);\r\n      this.syncInterval = null;\r\n    }\r\n  }\r\n\r\n  // Deƒüi≈üim kontrol√º\r\n  hasChanged(newCounters) {\r\n    if (!this.lastCounters) return true;\r\n    \r\n    return (\r\n      this.lastCounters.Q !== newCounters.Q ||\r\n      this.lastCounters.P !== newCounters.P ||\r\n      this.lastCounters.T !== newCounters.T ||\r\n      this.lastCounters.offline !== newCounters.offline\r\n    );\r\n  }\r\n\r\n  // Listener ekle (component'ler i√ßin)\r\n  addListener(callback) {\r\n    this.listeners.add(callback);\r\n    return () => this.listeners.delete(callback);\r\n  }\r\n\r\n  // Listener'lara bildir\r\n  notifyListeners(counters) {\r\n    this.listeners.forEach(callback => {\r\n      try {\r\n        callback(counters);\r\n      } catch (error) {\r\n        console.error('‚ùå Listener hatasƒ±:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Temizlik\r\n  destroy() {\r\n    this.stopAutoSync();\r\n    this.listeners.clear();\r\n  }\r\n}\r\n\r\n// Singleton instance\r\nexport const counterSync = new CounterSyncService();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}