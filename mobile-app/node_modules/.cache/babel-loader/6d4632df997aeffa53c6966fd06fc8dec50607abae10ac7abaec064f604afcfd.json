{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\N\\u0130DAA\\\\Cargo Digital Twin Test Lab\\\\mobile-app\\\\src\\\\components\\\\BarcodeScanner.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { FaBarcode, FaToggleOn, FaToggleOff, FaTrash, FaSync, FaInfoCircle, FaExclamationTriangle, FaCheck, FaMobile } from 'react-icons/fa';\nimport { counterSync } from '../services/CounterSyncService';\nimport { eventBus } from '../services/ToastManager';\nimport './BarcodeScanner.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BarcodeScanner = ({\n  offlineQueue,\n  onUpdate\n}) => {\n  _s();\n  // 🎯 TEK KAYNAKLI DURUM MODELİ - Sadece depodan oku\n  const [offline, setOffline] = useState(false); // true/false\n  const [Q, setQ] = useState(0); // kuyruk: count(status == \"queued\")\n  const [P, setP] = useState(0); // işleniyor: count(status == \"processing\")\n  const [T, setT] = useState(0); // toplam: count(status == \"done\" AND sameDay(completedAt, today))\n\n  // Worker durumu - idle | running (kilitleme için)\n  const [running, setRunning] = useState(false);\n\n  // 🔄 RECALC() - Her olaydan sonra çalışır, depodan yeniden hesaplar\n  const recalc = async () => {\n    try {\n      const queueData = JSON.parse(localStorage.getItem('offline_queue') || '[]');\n\n      // Kuyruk = count(status == \"queued\")\n      const queuedCount = queueData.filter(item => item.status === 'queued').length;\n\n      // İşleniyor = count(status == \"processing\") \n      const processingCount = queueData.filter(item => item.status === 'processing').length;\n\n      // Toplam (Bugün) = count(status == \"done\" AND sameDay(completedAt, today))\n      const today = new Date().toDateString();\n      const doneCount = queueData.filter(item => item.status === 'done' && item.completedAt && new Date(item.completedAt).toDateString() === today).length;\n\n      // State'i güncelle\n      setQ(queuedCount);\n      setP(processingCount);\n      setT(doneCount);\n      console.log(`🔄 RECALC: Q=${queuedCount}, P=${processingCount}, T=${doneCount}`);\n    } catch (error) {\n      console.error('❌ RECALC hatası:', error);\n    }\n  };\n\n  // Yardımcı state (UI için)\n  const [queueItems, setQueueItems] = useState([]);\n  const [showClearModal, setShowClearModal] = useState(false);\n  const [isSimModalOpen, setIsSimModalOpen] = useState(false);\n\n  // Debounce koruma - 300ms\n  const [lastActionTime, setLastActionTime] = useState(0);\n  const DEBOUNCE_DELAY = 300;\n\n  // 20 saniyelik watchdog - takılmayı önler\n  const [watchdogTimer, setWatchdogTimer] = useState(null);\n  const WATCHDOG_TIMEOUT = 20000; // 20 saniye\n\n  const testBarcodes = [{\n    code: 'ULD-AKE12345AB',\n    type: 'ULD',\n    valid: true\n  }, {\n    code: '123-45678901',\n    type: 'AWB',\n    valid: true\n  }, {\n    code: 'ULD-ABC123',\n    type: 'ULD',\n    valid: false\n  }, {\n    code: 'INVALID-CODE',\n    type: 'INVALID',\n    valid: false\n  }];\n\n  // Debounce check fonksiyonu\n  const checkDebounce = () => {\n    const now = Date.now();\n    if (now - lastActionTime < DEBOUNCE_DELAY) {\n      console.log('⚠️ Debounced - çok hızlı tıklama');\n      return false;\n    }\n    setLastActionTime(now);\n    return true;\n  };\n\n  // Aksiyon logu helper\n  const logAction = (action, before, after) => {\n    console.log(`${action}: önce Q=${before.Q},P=${before.P},T=${before.T}, offline=${before.offline} → sonra Q=${after.Q},P=${after.P},T=${after.T}, offline=${after.offline}`);\n  };\n\n  // 🐕 WATCHDOG - 20 saniye sonra processing kayıtları queued'a döndür\n  const startWatchdog = () => {\n    if (watchdogTimer) {\n      clearTimeout(watchdogTimer);\n    }\n    const timer = setTimeout(async () => {\n      console.log('🐕 Watchdog tetiklendi - 20sn aşan processing kayıtları kontrol ediliyor');\n      const queueData = JSON.parse(localStorage.getItem('offline_queue') || '[]');\n      const now = new Date().getTime();\n      let updated = false;\n\n      // Processing kayıtları kontrol et: now - startedAt > 20sn\n      const updatedQueueData = queueData.map(item => {\n        if (item.status === 'processing' && item.startedAt) {\n          const startedTime = new Date(item.startedAt).getTime();\n          const elapsed = now - startedTime;\n          if (elapsed > 20000) {\n            // 20 saniye\n            console.log(`⏰ Watchdog: ${item.id} 20sn aştı (${Math.round(elapsed / 1000)}sn), queued'a döndürülüyor`);\n            updated = true;\n            return {\n              ...item,\n              status: 'queued',\n              startedAt: null,\n              retryCount: (item.retryCount || 0) + 1\n            };\n          }\n        }\n        return item;\n      });\n      if (updated) {\n        localStorage.setItem('offline_queue', JSON.stringify(updatedQueueData));\n        await recalc(); // RECALC çalıştır\n        toast.warning('⚠️ 20 saniye aşan işler kuyruğa döndürüldü');\n      }\n      setWatchdogTimer(null);\n    }, WATCHDOG_TIMEOUT);\n    setWatchdogTimer(timer);\n  };\n\n  // Watchdog'u durdur\n  const stopWatchdog = () => {\n    if (watchdogTimer) {\n      clearTimeout(watchdogTimer);\n      setWatchdogTimer(null);\n    }\n  };\n\n  // Buton durumları hesaplama - SPESİFİKASYONA GÖRE\n  const getButtonStates = () => {\n    return {\n      scanButton: {\n        disabled: false,\n        // Her zaman aktif\n        tooltip: 'Barkod tara/oku'\n      },\n      processButton: {\n        disabled: !(Q > 0 && !running),\n        // Q > 0 && !running (offline kontrolü kaldırıldı)\n        tooltip: !(Q > 0) ? 'Kuyruk boş' : running ? 'İşlem devam ediyor' : 'Kuyruğu işle'\n      },\n      clearButton: {\n        disabled: !(Q > 0 && !running),\n        // Q > 0 && !running\n        tooltip: !(Q > 0) ? 'Kuyruk boş' : running ? 'İşlem devam ediyor' : 'Kuyruğu temizle'\n      }\n    };\n  };\n\n  // Toggle fonksiyonu kaldırıldı - sadece online mod\n\n  // Mobil testini bitir\n  const handleMobileTestComplete = async () => {\n    if (!checkDebounce()) return;\n    console.log(`🔄 Mobil Testini Bitir clicked: T=${T}`);\n    try {\n      // URL'den runId'yi al\n      const urlParams = new URLSearchParams(window.location.search);\n      const runId = urlParams.get('runId');\n      if (!runId) {\n        toast.error('❌ RunId bulunamadı');\n        return;\n      }\n\n      // Backend URL'ini belirle (mobil cihazda 10.0.2.2 kullan)\n      const isMobile = /Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n      const apiBaseUrl = isMobile ? 'http://10.0.2.2:3001' : 'http://localhost:3001';\n\n      // Backend'e mobil test tamamlandı isteği gönder\n      const response = await fetch(`${apiBaseUrl}/api/mobile-test-completed`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          runId: runId,\n          results: {\n            passed: T,\n            // Toplam başarılı barkod sayısı\n            failed: 0,\n            // Şimdilik 0, gerçek uygulamada hesaplanabilir\n            total: T\n          }\n        })\n      });\n      if (response.ok) {\n        console.log('✅ Mobil test tamamlandı bildirildi');\n\n        // 2 saniye sonra sayfayı yenile (opsiyonel)\n        setTimeout(() => {\n          window.location.reload();\n        }, 2000);\n      } else {\n        throw new Error('Backend hatası');\n      }\n    } catch (error) {\n      console.error('❌ Mobil test tamamlandı hatası:', error);\n      toast.error('❌ Test tamamlandı bildirilemedi');\n    }\n  };\n\n  // 🔄 2) Barkod Tara / Oku - Anında işlem veya modal açma\n  const openBarcodeModal = () => {\n    if (!checkDebounce()) return;\n    console.log(`🔄 Barkod Tara clicked: offline=${offline}, Q=${Q}, P=${P}, T=${T}`);\n\n    // Offline KAPALI ise anında işlem yap\n    if (!offline) {\n      handleInstantBarcodeScan();\n    } else {\n      // Offline AÇIK ise modal aç\n      setIsSimModalOpen(true);\n    }\n  };\n\n  // Anında barkod işleme (offline kapalı)\n  const handleInstantBarcodeScan = async () => {\n    if (!checkDebounce()) return;\n    console.log(`🎯 Anında barkod işleme: offline=${offline}`);\n    setRunning(true); // Kilitleme\n\n    try {\n      // Test barkodu kullan\n      const testBarcode = {\n        code: 'ULD-ABC12345XY',\n        valid: true\n      };\n      console.log(`🎯 Barkod işleniyor: ${testBarcode.code}`);\n\n      // Simülasyon - işleme süresi (1000ms)\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      if (testBarcode.valid) {\n        // Başarılı → status=done, completedAt=now\n        const newItem = {\n          id: `barcode-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n          barcode: testBarcode.code,\n          timestamp: new Date().toISOString(),\n          status: 'done',\n          createdAt: new Date().toISOString(),\n          completedAt: new Date().toISOString(),\n          retryCount: 0\n        };\n\n        // Depoya kaydet\n        const queueData = JSON.parse(localStorage.getItem('offline_queue') || '[]');\n        queueData.push(newItem);\n        localStorage.setItem('offline_queue', JSON.stringify(queueData));\n\n        // RECALC çalıştır\n        await recalc();\n        toast.success(`✅ Barkod işlendi: ${testBarcode.code}`);\n        eventBus.emit('barcode:ok', {\n          code: testBarcode.code\n        });\n\n        // Event gönder\n        await sendEvent('barcode_ok', {\n          code: testBarcode.code,\n          mode: 'online'\n        });\n      } else {\n        // Başarısız: T değişmez (hiçbir şey kaydetme)\n        toast.error('❌ İşlem başarısız');\n        eventBus.emit('barcode:fail');\n\n        // Event gönder\n        await sendEvent('barcode_fail', {\n          reason: 'invalid_format'\n        });\n      }\n    } catch (error) {\n      console.error('❌ Anında barkod işleme hatası:', error);\n      toast.error('❌ Barkod işlenemedi');\n\n      // Event gönder\n      await sendEvent('barcode_fail', {\n        reason: 'server_5xx'\n      });\n    } finally {\n      setRunning(false); // Kilidi aç\n    }\n  };\n\n  // 🔄 3) Barkod seçimi ve işleme\n  const simulateScan = async barcode => {\n    if (!checkDebounce()) return;\n    console.log(`🔄 Barkod seçildi: offline=${offline}, Q=${Q}, P=${P}, T=${T}, barcode=${(barcode === null || barcode === void 0 ? void 0 : barcode.code) || 'manual'}`);\n\n    // Modal kapat\n    setIsSimModalOpen(false);\n\n    // Offline AÇIK iken barkod eklendi → Kuyruk +1\n    if (offline) {\n      const newItem = {\n        id: `barcode-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n        barcode: (barcode === null || barcode === void 0 ? void 0 : barcode.code) || 'TEST-12345',\n        timestamp: new Date().toISOString(),\n        status: 'queued',\n        createdAt: new Date().toISOString(),\n        retryCount: 0\n      };\n\n      // Depoya kaydet\n      const queueData = JSON.parse(localStorage.getItem('offline_queue') || '[]');\n      queueData.push(newItem);\n      localStorage.setItem('offline_queue', JSON.stringify(queueData));\n\n      // RECALC çalıştır\n      await recalc();\n      eventBus.emit('queue:add');\n      return;\n    }\n\n    // Online modda simülasyon - API çağrısı yapma\n    setRunning(true); // Kilitleme\n\n    try {\n      const testBarcode = barcode || {\n        code: 'TEST-12345',\n        valid: true\n      };\n      console.log(`🎯 Barkod simülasyonu: ${testBarcode.code}`);\n\n      // Simülasyon - işleme süresi (1000ms)\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      if (testBarcode.valid) {\n        // Başarılı → status=done, completedAt=now\n        const newItem = {\n          id: `barcode-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n          barcode: testBarcode.code,\n          timestamp: new Date().toISOString(),\n          status: 'done',\n          createdAt: new Date().toISOString(),\n          completedAt: new Date().toISOString(),\n          retryCount: 0\n        };\n\n        // Depoya kaydet\n        const queueData = JSON.parse(localStorage.getItem('offline_queue') || '[]');\n        queueData.push(newItem);\n        localStorage.setItem('offline_queue', JSON.stringify(queueData));\n\n        // RECALC çalıştır\n        await recalc();\n        toast.success(`✅ Barkod işlendi (simülasyon)`);\n        eventBus.emit('barcode:ok', {\n          code: testBarcode.code\n        });\n\n        // Event gönder\n        await sendEvent('barcode_ok', {\n          code: testBarcode.code,\n          mode: 'online'\n        });\n      } else {\n        // Başarısız: T değişmez (hiçbir şey kaydetme)\n        toast.error('❌ İşlem başarısız (simülasyon)');\n        eventBus.emit('barcode:fail');\n\n        // Event gönder\n        await sendEvent('barcode_fail', {\n          reason: 'invalid_format'\n        });\n      }\n    } catch (error) {\n      console.error('❌ Barkod simülasyon hatası:', error);\n      toast.error('❌ Simülasyon hatası');\n    } finally {\n      setRunning(false); // Kilidi aç\n    }\n  };\n\n  // Health check fonksiyonu\n  const checkServerHealth = async () => {\n    try {\n      // URL parametresinden test modunu kontrol et\n      const urlParams = new URLSearchParams(window.location.search);\n      const testMode = urlParams.get('test') || 'desktop';\n      let apiBaseUrl;\n      if (testMode === 'mobile' || testMode === 'emulator') {\n        apiBaseUrl = 'http://localhost:3001';\n      } else {\n        apiBaseUrl = 'http://localhost:3001';\n      }\n      console.log(`🏥 Health check: ${apiBaseUrl}/health (testMode: ${testMode})`);\n      const startTime = Date.now();\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 5000);\n      const response = await fetch(`${apiBaseUrl}/health`, {\n        method: 'GET',\n        signal: controller.signal\n      });\n      clearTimeout(timeoutId);\n      const duration = Date.now() - startTime;\n      if (response.ok) {\n        console.log(`✅ Server health OK: ${duration}ms`);\n        return {\n          success: true,\n          url: apiBaseUrl,\n          duration\n        };\n      } else {\n        console.log(`❌ Server health failed: ${response.status} - ${duration}ms`);\n        return {\n          success: false,\n          url: apiBaseUrl,\n          error: `HTTP ${response.status}`,\n          duration\n        };\n      }\n    } catch (error) {\n      const duration = Date.now() - startTime;\n      console.log(`❌ Server health error: ${error.message} - ${duration}ms`);\n      let errorType = 'UNKNOWN';\n      if (error.name === 'TypeError' && error.message.includes('fetch')) {\n        errorType = 'NETWORK_ERROR';\n      } else if (error.name === 'AbortError') {\n        errorType = 'TIMEOUT';\n      } else if (error.message.includes('DNS')) {\n        errorType = 'DNS_ERROR';\n      }\n      return {\n        success: false,\n        url: apiBaseUrl,\n        error: errorType,\n        duration\n      };\n    }\n  };\n\n  // 🔄 3) Kuyruğu İşle (yalnız offline KAPALI ve Q>0 iken)\n  const processQueue = async () => {\n    if (!checkDebounce()) return;\n\n    // Kilitleme kontrolü\n    if (running) {\n      console.log('🚫 Kuyruğu İşle blocked: zaten çalışıyor');\n      return;\n    }\n\n    // Health check önce\n    console.log('🏥 Kuyruğu İşle öncesi health check...');\n    const healthResult = await checkServerHealth();\n    if (!healthResult.success) {\n      const errorMsg = `Sunucuya ulaşılamıyor – ${healthResult.url}/health → ${healthResult.error} (${healthResult.duration}ms)`;\n      console.log(`❌ ${errorMsg}`);\n      toast.error(errorMsg);\n      return;\n    }\n    setRunning(true); // Kilitleme\n\n    try {\n      console.log(`🔄 Kuyruğu İşle başladı: Q=${Q}, P=${P}, T=${T}`);\n\n      // Depodan queued kayıtları al\n      const queueData = JSON.parse(localStorage.getItem('offline_queue') || '[]');\n      const queuedItems = queueData.filter(item => item.status === 'queued');\n      if (queuedItems.length === 0) {\n        toast.info('ℹ️ Kuyruk boş');\n        return;\n      }\n\n      // Her queued kaydı için işle\n      for (const item of queuedItems) {\n        try {\n          // 1) Al (atomik): queued → processing\n          const updatedQueueData = JSON.parse(localStorage.getItem('offline_queue') || '[]');\n          const finalQueueData = updatedQueueData.map(queueItem => {\n            if (queueItem.id === item.id && queueItem.status === 'queued') {\n              return {\n                ...queueItem,\n                status: 'processing',\n                startedAt: new Date().toISOString()\n              };\n            }\n            return queueItem;\n          });\n          localStorage.setItem('offline_queue', JSON.stringify(finalQueueData));\n\n          // RECALC çalıştır\n          await recalc();\n\n          // 2) Gönder (gerçek API çağrısı)\n          const urlParams = new URLSearchParams(window.location.search);\n          const testMode = urlParams.get('test') || 'desktop';\n          let apiBaseUrl;\n          if (testMode === 'mobile' || testMode === 'emulator') {\n            apiBaseUrl = 'http://localhost:3001';\n          } else {\n            apiBaseUrl = 'http://localhost:3001';\n          }\n          console.log(`📤 Barkod gönderiliyor: ${item.barcode} → ${apiBaseUrl}/api/barcode/scan`);\n          const startTime = Date.now();\n          const response = await fetch(`${apiBaseUrl}/api/barcode/scan`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              barcode: item.barcode,\n              timestamp: item.timestamp,\n              deviceId: 'mobile-app'\n            })\n          });\n          const duration = Date.now() - startTime;\n          console.log(`📡 API yanıtı: ${response.status} (${duration}ms)`);\n\n          // Response'u parse et\n          const responseData = await response.json();\n          console.log(`📡 API response data:`, responseData);\n\n          // API sonucuna göre işle (hem HTTP status hem de JSON success)\n          const isSuccess = response.ok && responseData.success;\n          if (isSuccess) {\n            // 200 → status=done, completedAt=now\n            const successQueueData = JSON.parse(localStorage.getItem('offline_queue') || '[]');\n            const finalSuccessData = successQueueData.map(queueItem => {\n              if (queueItem.id === item.id && queueItem.status === 'processing') {\n                return {\n                  ...queueItem,\n                  status: 'done',\n                  completedAt: new Date().toISOString()\n                };\n              }\n              return queueItem;\n            });\n            localStorage.setItem('offline_queue', JSON.stringify(finalSuccessData));\n            console.log(`✅ ${item.barcode} başarıyla işlendi`);\n          } else {\n            // 5xx/timeout/ağ → status=queued, retry++\n            const retryQueueData = JSON.parse(localStorage.getItem('offline_queue') || '[]');\n            const finalRetryData = retryQueueData.map(queueItem => {\n              if (queueItem.id === item.id && queueItem.status === 'processing') {\n                return {\n                  ...queueItem,\n                  status: 'queued',\n                  startedAt: null,\n                  retryCount: (queueItem.retryCount || 0) + 1,\n                  lastError: `HTTP ${response.status} (${duration}ms)`\n                };\n              }\n              return queueItem;\n            });\n            localStorage.setItem('offline_queue', JSON.stringify(finalRetryData));\n            console.log(`⚠️ ${item.barcode} geçici hata (${response.status}), kuyruğa döndürüldü`);\n            toast.warning(`Sunucuya ulaşılamadı – tekrar denenecek (${(item.retryCount || 0) + 1}/3)`);\n          }\n\n          // RECALC çalıştır\n          await recalc();\n        } catch (error) {\n          console.error(`❌ ${item.barcode} işleme hatası:`, error);\n\n          // Hata türünü belirle\n          let errorType = 'UNKNOWN';\n          if (error.name === 'TypeError' && error.message.includes('fetch')) {\n            errorType = 'NETWORK_ERROR';\n          } else if (error.name === 'AbortError') {\n            errorType = 'TIMEOUT';\n          } else if (error.message.includes('DNS')) {\n            errorType = 'DNS_ERROR';\n          }\n\n          // Hata durumunda queued'a döndür\n          const errorQueueData = JSON.parse(localStorage.getItem('offline_queue') || '[]');\n          const finalErrorData = errorQueueData.map(queueItem => {\n            if (queueItem.id === item.id && queueItem.status === 'processing') {\n              return {\n                ...queueItem,\n                status: 'queued',\n                startedAt: null,\n                retryCount: (queueItem.retryCount || 0) + 1,\n                lastError: `${errorType}: ${error.message}`\n              };\n            }\n            return queueItem;\n          });\n          localStorage.setItem('offline_queue', JSON.stringify(finalErrorData));\n          console.log(`⚠️ ${item.barcode} ${errorType} hatası, kuyruğa döndürüldü`);\n          toast.warning(`Sunucuya ulaşılamadı – tekrar denenecek (${(item.retryCount || 0) + 1}/3)`);\n          await recalc();\n        }\n      }\n      toast.success(`🎉 Kuyruk işleme tamamlandı`);\n    } catch (error) {\n      console.error('❌ Kuyruk işleme hatası:', error);\n      toast.error('❌ Kuyruk işleme hatası');\n    } finally {\n      setRunning(false); // Kilidi aç\n    }\n  };\n\n  // 🔄 4) Kuyruğu Temizle (Q > 0 && !running iken)\n  const clearQueue = async () => {\n    if (!checkDebounce()) return;\n    if (running) {\n      console.log('🚫 Kuyruğu Temizle blocked: işlem devam ediyor');\n      return;\n    }\n    console.log(`🔄 Kuyruğu Temizle clicked: Q=${Q}, P=${P}, T=${T}`);\n    if (Q === 0) {\n      toast.info('ℹ️ Kuyruk zaten boş');\n      return;\n    }\n\n    // Depodan queued ve processing kayıtları temizle\n    const queueData = JSON.parse(localStorage.getItem('offline_queue') || '[]');\n    const filteredData = queueData.filter(item => item.status !== 'queued' && item.status !== 'processing');\n    localStorage.setItem('offline_queue', JSON.stringify(filteredData));\n\n    // RECALC çalıştır\n    await recalc();\n    toast.success(`🗑️ Kuyruk temizlendi`);\n  };\n  const updateQueueItems = async () => {\n    if (offlineQueue) {\n      const items = await offlineQueue.getQueue();\n      setQueueItems(items);\n      if (onUpdate) onUpdate();\n    }\n  };\n\n  // Initialization - sayaçları senkronize et\n  useEffect(() => {\n    const initializeCounters = async () => {\n      // RECALC çalıştır\n      await recalc();\n      if (offlineQueue) {\n        const queue = await offlineQueue.getQueue();\n        setQueueItems(queue);\n        console.log(`🔄 Initialized: Q=${Q}, P=${P}, T=${T}, offline=${offline}`);\n      }\n    };\n    initializeCounters();\n  }, [offlineQueue]);\n\n  // Cleanup - component unmount olduğunda watchdog'u temizle\n  useEffect(() => {\n    return () => {\n      stopWatchdog();\n    };\n  }, []);\n\n  // Mobil testi bitir fonksiyonu\n  const completeMobileTest = async () => {\n    try {\n      console.log('🏁 Mobil test tamamlanıyor...');\n\n      // URL parametresinden runId'yi al\n      const urlParams = new URLSearchParams(window.location.search);\n      const runId = urlParams.get('runId');\n      if (!runId) {\n        toast.error('❌ RunId bulunamadı');\n        return;\n      }\n\n      // 1) mobile_test_completed event'ini gönder\n      await sendEvent('mobile_test_completed', {\n        runId,\n        completedAt: new Date().toISOString(),\n        totalBarcodes: T,\n        successCount: T,\n        failCount: 0\n      });\n\n      // 2) runs/complete çağrısı yap (HER DURUMDA)\n      await completeRun(runId, T, 0); // successCount, failCount\n\n      toast.success('✅ Mobil test tamamlandı ve finalize edildi');\n    } catch (error) {\n      console.error('❌ Mobil test bitirme hatası:', error);\n      toast.error('❌ Test tamamlanamadı');\n    }\n  };\n\n  // Test sıfırlama fonksiyonu\n  const resetTest = () => {\n    try {\n      console.log('🔄 Test sıfırlanıyor...');\n\n      // Sadece yerel state'i temizle, finalize etme\n      localStorage.removeItem('offline_queue');\n\n      // State'leri sıfırla\n      setQ(0);\n      setP(0);\n      setT(0);\n      setQueueItems([]);\n      toast.info('ℹ️ Test sıfırlandı (finalize edilmedi)');\n    } catch (error) {\n      console.error('❌ Test sıfırlama hatası:', error);\n      toast.error('❌ Test sıfırlanamadı');\n    }\n  };\n\n  // Run finalize fonksiyonu\n  const completeRun = async (runId, successCount, failCount) => {\n    try {\n      const urlParams = new URLSearchParams(window.location.search);\n      const testMode = urlParams.get('test') || 'desktop';\n      let apiBaseUrl;\n      if (testMode === 'mobile' || testMode === 'emulator') {\n        apiBaseUrl = 'http://localhost:3001';\n      } else {\n        apiBaseUrl = 'http://localhost:3001';\n      }\n      const runData = {\n        runId,\n        status: failCount > 0 ? 'failed' : 'success',\n        web: {\n          pass: 0,\n          // Web testi yapılmadı\n          fail: 0,\n          total: 0\n        },\n        mobile: {\n          pass: successCount,\n          fail: failCount,\n          total: successCount + failCount\n        },\n        completedAt: new Date().toISOString(),\n        duration: Date.now() // Basit süre hesaplama\n      };\n      console.log(`🏁 Run finalize ediliyor: ${runId} → ${apiBaseUrl}/api/runs/complete`);\n      const response = await fetch(`${apiBaseUrl}/api/runs/complete`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(runData)\n      });\n      if (response.ok) {\n        console.log(`✅ Run finalize edildi: ${runId}`);\n        return true;\n      } else {\n        console.log(`❌ Run finalize edilemedi: ${response.status}`);\n        return false;\n      }\n    } catch (error) {\n      console.error('❌ Run finalize hatası:', error);\n      return false;\n    }\n  };\n\n  // Event gönderme fonksiyonu\n  const sendEvent = async (type, payload) => {\n    try {\n      // URL parametresinden test modunu kontrol et\n      const urlParams = new URLSearchParams(window.location.search);\n      const testMode = urlParams.get('test') || 'desktop';\n      let apiBaseUrl;\n      if (testMode === 'mobile' || testMode === 'emulator') {\n        apiBaseUrl = 'http://localhost:3001';\n      } else {\n        apiBaseUrl = 'http://localhost:3001';\n      }\n\n      // RunId'yi URL'den al veya oluştur\n      const runId = urlParams.get('runId') || `run-${Date.now()}`;\n      const eventId = `${runId}-${type}-${Date.now()}`;\n\n      // Önce run progress'e gönder\n      try {\n        await fetch(`${apiBaseUrl}/api/runs/progress`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            runId,\n            eventType: type,\n            payload,\n            timestamp: new Date().toISOString()\n          })\n        });\n        console.log(`📊 Run progress güncellendi: ${type}`);\n      } catch (progressError) {\n        console.warn('⚠️ Run progress güncellenemedi:', progressError);\n      }\n\n      // Sonra events endpoint'ine gönder\n      const event = {\n        runId,\n        eventId,\n        type,\n        payload,\n        source: 'mobile'\n      };\n      console.log(`📤 Event gönderiliyor: ${type} → ${apiBaseUrl}/api/events`);\n      const response = await fetch(`${apiBaseUrl}/api/events`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(event)\n      });\n      if (response.ok) {\n        console.log(`✅ Event gönderildi: ${type}`);\n      } else {\n        console.log(`❌ Event gönderilemedi: ${response.status}`);\n      }\n    } catch (error) {\n      console.error('❌ Event gönderme hatası:', error);\n    }\n  };\n\n  // Render logu - her render'da\n  console.log(`🔄 Render: offline=${offline}, Q=${Q}, P=${P}, T=${T}, running=${running}`);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"barcode-scanner\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scanner-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"scanner-title\",\n        children: \"Dijital \\u0130kiz Tabanl\\u0131 Test Sistemi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 867,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `status-badge ${offline ? 'offline' : 'online'}`,\n        children: offline ? '📱 Offline' : '🌐 Online'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 868,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 866,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card queue\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: Q\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 877,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Kuyruk\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 878,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 876,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card processing\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: P\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 881,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"\\u0130\\u015Fleniyor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 882,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 880,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card total\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: T\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 885,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Toplam\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 886,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-subtitle\",\n            children: \"24 saat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 887,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 884,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 875,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 874,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"toggle-label\",\n          children: \"Offline Modu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 896,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `toggle-btn ${offline ? 'active' : ''}`,\n          onClick: () => setOffline(!offline),\n          children: offline ? /*#__PURE__*/_jsxDEV(FaToggleOn, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 901,\n            columnNumber: 24\n          }, this) : /*#__PURE__*/_jsxDEV(FaToggleOff, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 901,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 897,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 895,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 894,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-section\",\n      children: (() => {\n        const buttonStates = getButtonStates();\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-btn primary\",\n            onClick: openBarcodeModal,\n            disabled: buttonStates.scanButton.disabled,\n            title: buttonStates.scanButton.tooltip,\n            children: [/*#__PURE__*/_jsxDEV(FaBarcode, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 919,\n              columnNumber: 17\n            }, this), \"Barkod Tara/Oku\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 913,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-btn secondary\",\n            onClick: processQueue,\n            disabled: buttonStates.processButton.disabled,\n            title: buttonStates.processButton.tooltip,\n            children: [/*#__PURE__*/_jsxDEV(FaSync, {\n              className: running ? 'spinning' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 930,\n              columnNumber: 17\n            }, this), running ? 'İşleniyor...' : 'Kuyruğu İşle', \" (\", Q, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 924,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-btn danger\",\n            onClick: clearQueue,\n            disabled: buttonStates.clearButton.disabled,\n            title: buttonStates.clearButton.tooltip,\n            children: [/*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 941,\n              columnNumber: 17\n            }, this), \"Kuyru\\u011Fu Temizle\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 935,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-btn success\",\n            onClick: completeMobileTest,\n            disabled: running,\n            title: \"Mobil test s\\xFCrecini tamamla\",\n            children: [/*#__PURE__*/_jsxDEV(FaCheck, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 952,\n              columnNumber: 17\n            }, this), \"Mobil Testi Bitir\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 946,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-btn warning\",\n            onClick: resetTest,\n            disabled: running,\n            title: \"Testi s\\u0131f\\u0131rla (finalize etmeden)\",\n            children: [/*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 963,\n              columnNumber: 17\n            }, this), \"Testi S\\u0131f\\u0131rla\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 957,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n      })()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 907,\n      columnNumber: 7\n    }, this), !isSimModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"Test Barkodlar\\u0131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 975,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-grid\",\n        children: testBarcodes.map((barcode, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `test-card ${barcode.valid ? 'valid' : 'invalid'}`,\n          onClick: () => simulateScan(barcode),\n          onTouchStart: e => {\n            // iOS için touch feedback\n            e.currentTarget.style.transform = 'scale(0.95)';\n          },\n          onTouchEnd: e => {\n            // Touch end'de normal haline dön\n            setTimeout(() => {\n              e.currentTarget.style.transform = '';\n            }, 150);\n          },\n          style: {\n            cursor: 'pointer',\n            WebkitTapHighlightColor: 'transparent'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"barcode-icon\",\n            children: /*#__PURE__*/_jsxDEV(FaBarcode, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 998,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 997,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"barcode-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"barcode-code\",\n              children: barcode.code\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1001,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"barcode-type\",\n              children: barcode.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1002,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `barcode-status ${barcode.valid ? 'valid' : 'invalid'}`,\n              children: barcode.valid ? '✅ Geçerli' : '❌ Geçersiz'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1003,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1000,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 978,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 976,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 974,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"queue-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"queue-title\",\n        children: [\"Kuyruk (\", queueItems.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1015,\n        columnNumber: 9\n      }, this), queueItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-queue\",\n        children: [/*#__PURE__*/_jsxDEV(FaInfoCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1021,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Kuyruk bo\\u015F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1022,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1020,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"queue-list\",\n        children: queueItems.map((item, index) => {\n          var _item$data, _item$data2, _item$data3, _item$data4, _item$data5, _item$data6, _item$data7;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"queue-item\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"item-barcode\",\n                children: ((_item$data = item.data) === null || _item$data === void 0 ? void 0 : _item$data.barcode) || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1029,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"item-type\",\n                children: ((_item$data2 = item.data) === null || _item$data2 === void 0 ? void 0 : _item$data2.type) || 'scan'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1030,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `item-status ${((_item$data3 = item.data) === null || _item$data3 === void 0 ? void 0 : _item$data3.status) || 'pending'}`,\n                children: [((_item$data4 = item.data) === null || _item$data4 === void 0 ? void 0 : _item$data4.status) === 'pending' && '⏳ Bekliyor', ((_item$data5 = item.data) === null || _item$data5 === void 0 ? void 0 : _item$data5.status) === 'processing' && '🔄 İşleniyor', ((_item$data6 = item.data) === null || _item$data6 === void 0 ? void 0 : _item$data6.status) === 'success' && '✅ Başarılı', ((_item$data7 = item.data) === null || _item$data7 === void 0 ? void 0 : _item$data7.status) === 'error' && '❌ Hatalı']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1031,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1028,\n              columnNumber: 17\n            }, this)\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1027,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1025,\n        columnNumber: 11\n      }, this), Q >= 100 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"long-queue-warning\",\n        children: [/*#__PURE__*/_jsxDEV(FaInfoCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1046,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Kuyruk b\\xFCy\\xFCk, arka planda g\\xF6nderiliyor...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1047,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1045,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1014,\n      columnNumber: 7\n    }, this), isSimModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: e => e.stopPropagation(),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Barkod Sim\\xFClasyonu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1057,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: () => setIsSimModalOpen(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1058,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1056,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"simulation-option\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"sim-btn primary\",\n              onClick: () => simulateScan({\n                code: 'ULD-AKE12345AB',\n                valid: true\n              }),\n              children: \"Ge\\xE7erli Barkod \\xDCret\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1069,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"sim-desc\",\n              children: \"Rastgele ge\\xE7erli format barkod \\xFCretir\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1075,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1068,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"simulation-option\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"sim-btn secondary\",\n              onClick: () => simulateScan({\n                code: 'INVALID-CODE',\n                valid: false\n              }),\n              children: \"Ge\\xE7ersiz Barkod \\xDCret\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1080,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"sim-desc\",\n              children: \"Negatif test i\\xE7in ge\\xE7ersiz barkod \\xFCretir\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1086,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1079,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"simulation-option\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Haz\\u0131r Barkodlardan Se\\xE7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1091,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"barcode-list\",\n              children: testBarcodes.map((barcode, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `barcode-item ${barcode.valid ? 'valid' : 'invalid'}`,\n                onClick: () => simulateScan(barcode),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"barcode-code\",\n                  children: barcode.code\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1099,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"barcode-type\",\n                  children: barcode.type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1100,\n                  columnNumber: 23\n                }, this)]\n              }, barcode.code, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1094,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1092,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1090,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"simulation-option\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"sim-btn test\",\n              onClick: () => {\n                setIsSimModalOpen(false);\n                runMobileTest();\n              },\n              children: [/*#__PURE__*/_jsxDEV(FaMobile, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1115,\n                columnNumber: 19\n              }, this), \"Mobil Testi Ba\\u015Flat\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"sim-desc\",\n              children: \"Otomatik test senaryosunu \\xE7al\\u0131\\u015Ft\\u0131r\\u0131r\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1118,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1107,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1066,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1055,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1054,\n      columnNumber: 9\n    }, this), showClearModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Kuyru\\u011Fu temizle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Kuyrukta \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: Q\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1130,\n            columnNumber: 25\n          }, this), \" kay\\u0131t var. Bu i\\u015Flem geri al\\u0131namaz.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1130,\n          columnNumber: 13\n        }, this), P > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"warning-text\",\n          children: [\"\\u26A0\\uFE0F \\u015Eu anda \", P, \" barkod i\\u015Fleniyor. \\u0130\\u015Flemi durdurup kuyru\\u011Fu temizlemek istiyor musunuz?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1132,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: () => setShowClearModal(false),\n            children: \"Vazge\\xE7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => {\n              clearQueue();\n              setShowClearModal(false);\n            },\n            children: P > 0 ? 'Evet, durdur ve sil' : 'Evet, temizle'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1143,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1128,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1127,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mobile-test-complete-section\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mobile-test-complete-btn\",\n        onClick: handleMobileTestComplete,\n        disabled: workerState !== 'idle',\n        title: workerState !== 'idle' ? 'İşlem devam ediyor' : 'Mobil testini bitir ve sonuçları gönder',\n        children: [/*#__PURE__*/_jsxDEV(FaExclamationTriangle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1165,\n          columnNumber: 11\n        }, this), \"Mobil Testini Bitir\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 864,\n    columnNumber: 5\n  }, this);\n};\n_s(BarcodeScanner, \"y9cSSb+/zU0KCee/6+W872XHX1Q=\");\n_c = BarcodeScanner;\nexport default BarcodeScanner;\nvar _c;\n$RefreshReg$(_c, \"BarcodeScanner\");","map":{"version":3,"names":["React","useState","useEffect","toast","FaBarcode","FaToggleOn","FaToggleOff","FaTrash","FaSync","FaInfoCircle","FaExclamationTriangle","FaCheck","FaMobile","counterSync","eventBus","jsxDEV","_jsxDEV","Fragment","_Fragment","BarcodeScanner","offlineQueue","onUpdate","_s","offline","setOffline","Q","setQ","P","setP","T","setT","running","setRunning","recalc","queueData","JSON","parse","localStorage","getItem","queuedCount","filter","item","status","length","processingCount","today","Date","toDateString","doneCount","completedAt","console","log","error","queueItems","setQueueItems","showClearModal","setShowClearModal","isSimModalOpen","setIsSimModalOpen","lastActionTime","setLastActionTime","DEBOUNCE_DELAY","watchdogTimer","setWatchdogTimer","WATCHDOG_TIMEOUT","testBarcodes","code","type","valid","checkDebounce","now","logAction","action","before","after","startWatchdog","clearTimeout","timer","setTimeout","getTime","updated","updatedQueueData","map","startedAt","startedTime","elapsed","id","Math","round","retryCount","setItem","stringify","warning","stopWatchdog","getButtonStates","scanButton","disabled","tooltip","processButton","clearButton","handleMobileTestComplete","urlParams","URLSearchParams","window","location","search","runId","get","isMobile","test","navigator","userAgent","apiBaseUrl","response","fetch","method","headers","body","results","passed","failed","total","ok","reload","Error","openBarcodeModal","handleInstantBarcodeScan","testBarcode","Promise","resolve","newItem","random","toString","substr","barcode","timestamp","toISOString","createdAt","push","success","emit","sendEvent","mode","reason","simulateScan","checkServerHealth","testMode","startTime","controller","AbortController","timeoutId","abort","signal","duration","url","message","errorType","name","includes","processQueue","healthResult","errorMsg","queuedItems","info","finalQueueData","queueItem","deviceId","responseData","json","isSuccess","successQueueData","finalSuccessData","retryQueueData","finalRetryData","lastError","errorQueueData","finalErrorData","clearQueue","filteredData","updateQueueItems","items","getQueue","initializeCounters","queue","completeMobileTest","totalBarcodes","successCount","failCount","completeRun","resetTest","removeItem","runData","web","pass","fail","mobile","payload","eventId","eventType","progressError","warn","event","source","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","buttonStates","title","index","onTouchStart","e","currentTarget","style","transform","onTouchEnd","cursor","WebkitTapHighlightColor","_item$data","_item$data2","_item$data3","_item$data4","_item$data5","_item$data6","_item$data7","data","stopPropagation","runMobileTest","workerState","_c","$RefreshReg$"],"sources":["C:/Users/NİDAA/Cargo Digital Twin Test Lab/mobile-app/src/components/BarcodeScanner.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { FaBarcode, FaToggleOn, FaToggleOff, FaTrash, FaSync, FaInfoCircle, FaExclamationTriangle, FaCheck, FaMobile } from 'react-icons/fa';\nimport { counterSync } from '../services/CounterSyncService';\nimport { eventBus } from '../services/ToastManager';\nimport './BarcodeScanner.css';\n\nconst BarcodeScanner = ({ offlineQueue, onUpdate }) => {\n  // 🎯 TEK KAYNAKLI DURUM MODELİ - Sadece depodan oku\n  const [offline, setOffline] = useState(false);  // true/false\n  const [Q, setQ] = useState(0);                  // kuyruk: count(status == \"queued\")\n  const [P, setP] = useState(0);                  // işleniyor: count(status == \"processing\")\n  const [T, setT] = useState(0);                  // toplam: count(status == \"done\" AND sameDay(completedAt, today))\n  \n  // Worker durumu - idle | running (kilitleme için)\n  const [running, setRunning] = useState(false);\n  \n  // 🔄 RECALC() - Her olaydan sonra çalışır, depodan yeniden hesaplar\n  const recalc = async () => {\n    try {\n      const queueData = JSON.parse(localStorage.getItem('offline_queue') || '[]')\n      \n      // Kuyruk = count(status == \"queued\")\n      const queuedCount = queueData.filter(item => item.status === 'queued').length\n      \n      // İşleniyor = count(status == \"processing\") \n      const processingCount = queueData.filter(item => item.status === 'processing').length\n      \n      // Toplam (Bugün) = count(status == \"done\" AND sameDay(completedAt, today))\n      const today = new Date().toDateString()\n      const doneCount = queueData.filter(item => \n        item.status === 'done' && \n        item.completedAt && \n        new Date(item.completedAt).toDateString() === today\n      ).length\n      \n      // State'i güncelle\n      setQ(queuedCount)\n      setP(processingCount)\n      setT(doneCount)\n      \n      console.log(`🔄 RECALC: Q=${queuedCount}, P=${processingCount}, T=${doneCount}`)\n    } catch (error) {\n      console.error('❌ RECALC hatası:', error)\n    }\n  }\n  \n  // Yardımcı state (UI için)\n  const [queueItems, setQueueItems] = useState([]);\n  const [showClearModal, setShowClearModal] = useState(false);\n  const [isSimModalOpen, setIsSimModalOpen] = useState(false);\n  \n  // Debounce koruma - 300ms\n  const [lastActionTime, setLastActionTime] = useState(0);\n  const DEBOUNCE_DELAY = 300;\n  \n  // 20 saniyelik watchdog - takılmayı önler\n  const [watchdogTimer, setWatchdogTimer] = useState(null);\n  const WATCHDOG_TIMEOUT = 20000; // 20 saniye\n\n  const testBarcodes = [\n    { code: 'ULD-AKE12345AB', type: 'ULD', valid: true },\n    { code: '123-45678901', type: 'AWB', valid: true },\n    { code: 'ULD-ABC123', type: 'ULD', valid: false },\n    { code: 'INVALID-CODE', type: 'INVALID', valid: false }\n  ];\n\n\n  // Debounce check fonksiyonu\n  const checkDebounce = () => {\n    const now = Date.now();\n    if (now - lastActionTime < DEBOUNCE_DELAY) {\n      console.log('⚠️ Debounced - çok hızlı tıklama');\n      return false;\n    }\n    setLastActionTime(now);\n    return true;\n  };\n\n  // Aksiyon logu helper\n  const logAction = (action, before, after) => {\n    console.log(`${action}: önce Q=${before.Q},P=${before.P},T=${before.T}, offline=${before.offline} → sonra Q=${after.Q},P=${after.P},T=${after.T}, offline=${after.offline}`);\n  };\n\n  // 🐕 WATCHDOG - 20 saniye sonra processing kayıtları queued'a döndür\n  const startWatchdog = () => {\n    if (watchdogTimer) {\n      clearTimeout(watchdogTimer);\n    }\n    \n    const timer = setTimeout(async () => {\n      console.log('🐕 Watchdog tetiklendi - 20sn aşan processing kayıtları kontrol ediliyor');\n      \n      const queueData = JSON.parse(localStorage.getItem('offline_queue') || '[]')\n      const now = new Date().getTime()\n      let updated = false\n      \n      // Processing kayıtları kontrol et: now - startedAt > 20sn\n      const updatedQueueData = queueData.map(item => {\n        if (item.status === 'processing' && item.startedAt) {\n          const startedTime = new Date(item.startedAt).getTime()\n          const elapsed = now - startedTime\n          \n          if (elapsed > 20000) { // 20 saniye\n            console.log(`⏰ Watchdog: ${item.id} 20sn aştı (${Math.round(elapsed/1000)}sn), queued'a döndürülüyor`)\n            updated = true\n            return {\n              ...item,\n              status: 'queued',\n              startedAt: null,\n              retryCount: (item.retryCount || 0) + 1\n            }\n          }\n        }\n        return item\n      })\n      \n      if (updated) {\n        localStorage.setItem('offline_queue', JSON.stringify(updatedQueueData))\n        await recalc() // RECALC çalıştır\n        toast.warning('⚠️ 20 saniye aşan işler kuyruğa döndürüldü')\n      }\n      \n      setWatchdogTimer(null)\n    }, WATCHDOG_TIMEOUT);\n    \n    setWatchdogTimer(timer);\n  };\n\n  // Watchdog'u durdur\n  const stopWatchdog = () => {\n    if (watchdogTimer) {\n      clearTimeout(watchdogTimer);\n      setWatchdogTimer(null);\n    }\n  };\n\n  // Buton durumları hesaplama - SPESİFİKASYONA GÖRE\n  const getButtonStates = () => {\n    return {\n      scanButton: {\n        disabled: false, // Her zaman aktif\n        tooltip: 'Barkod tara/oku'\n      },\n      processButton: {\n        disabled: !(Q > 0 && !running), // Q > 0 && !running (offline kontrolü kaldırıldı)\n        tooltip: !(Q > 0) ? 'Kuyruk boş' :\n                running ? 'İşlem devam ediyor' : 'Kuyruğu işle'\n      },\n      clearButton: {\n        disabled: !(Q > 0 && !running), // Q > 0 && !running\n        tooltip: !(Q > 0) ? 'Kuyruk boş' :\n                running ? 'İşlem devam ediyor' : 'Kuyruğu temizle'\n      }\n    };\n  };\n\n\n\n  // Toggle fonksiyonu kaldırıldı - sadece online mod\n\n  // Mobil testini bitir\n  const handleMobileTestComplete = async () => {\n    if (!checkDebounce()) return;\n    \n    console.log(`🔄 Mobil Testini Bitir clicked: T=${T}`);\n    \n    try {\n      // URL'den runId'yi al\n      const urlParams = new URLSearchParams(window.location.search);\n      const runId = urlParams.get('runId');\n      \n      if (!runId) {\n        toast.error('❌ RunId bulunamadı');\n        return;\n      }\n\n      // Backend URL'ini belirle (mobil cihazda 10.0.2.2 kullan)\n      const isMobile = /Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n      const apiBaseUrl = isMobile ? 'http://10.0.2.2:3001' : 'http://localhost:3001';\n      \n      // Backend'e mobil test tamamlandı isteği gönder\n      const response = await fetch(`${apiBaseUrl}/api/mobile-test-completed`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          runId: runId,\n          results: {\n            passed: T, // Toplam başarılı barkod sayısı\n            failed: 0, // Şimdilik 0, gerçek uygulamada hesaplanabilir\n            total: T\n          }\n        })\n      });\n\n      if (response.ok) {\n        console.log('✅ Mobil test tamamlandı bildirildi');\n        \n        // 2 saniye sonra sayfayı yenile (opsiyonel)\n        setTimeout(() => {\n          window.location.reload();\n        }, 2000);\n      } else {\n        throw new Error('Backend hatası');\n      }\n    } catch (error) {\n      console.error('❌ Mobil test tamamlandı hatası:', error);\n      toast.error('❌ Test tamamlandı bildirilemedi');\n    }\n  };\n\n  // 🔄 2) Barkod Tara / Oku - Anında işlem veya modal açma\n  const openBarcodeModal = () => {\n    if (!checkDebounce()) return;\n    console.log(`🔄 Barkod Tara clicked: offline=${offline}, Q=${Q}, P=${P}, T=${T}`);\n    \n    // Offline KAPALI ise anında işlem yap\n    if (!offline) {\n      handleInstantBarcodeScan();\n    } else {\n      // Offline AÇIK ise modal aç\n      setIsSimModalOpen(true);\n    }\n  };\n\n  // Anında barkod işleme (offline kapalı)\n  const handleInstantBarcodeScan = async () => {\n    if (!checkDebounce()) return;\n    \n    console.log(`🎯 Anında barkod işleme: offline=${offline}`);\n    \n    setRunning(true); // Kilitleme\n    \n    try {\n      // Test barkodu kullan\n      const testBarcode = { code: 'ULD-ABC12345XY', valid: true };\n      \n      console.log(`🎯 Barkod işleniyor: ${testBarcode.code}`);\n      \n      // Simülasyon - işleme süresi (1000ms)\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      if (testBarcode.valid) {\n        // Başarılı → status=done, completedAt=now\n        const newItem = {\n          id: `barcode-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n          barcode: testBarcode.code,\n          timestamp: new Date().toISOString(),\n          status: 'done',\n          createdAt: new Date().toISOString(),\n          completedAt: new Date().toISOString(),\n          retryCount: 0\n        }\n        \n        // Depoya kaydet\n        const queueData = JSON.parse(localStorage.getItem('offline_queue') || '[]')\n        queueData.push(newItem)\n        localStorage.setItem('offline_queue', JSON.stringify(queueData))\n        \n        // RECALC çalıştır\n        await recalc()\n        \n        toast.success(`✅ Barkod işlendi: ${testBarcode.code}`);\n        eventBus.emit('barcode:ok', { code: testBarcode.code });\n        \n        // Event gönder\n        await sendEvent('barcode_ok', { \n          code: testBarcode.code, \n          mode: 'online' \n        });\n      } else {\n        // Başarısız: T değişmez (hiçbir şey kaydetme)\n        toast.error('❌ İşlem başarısız');\n        eventBus.emit('barcode:fail');\n        \n        // Event gönder\n        await sendEvent('barcode_fail', { \n          reason: 'invalid_format' \n        });\n      }\n      \n    } catch (error) {\n      console.error('❌ Anında barkod işleme hatası:', error);\n      toast.error('❌ Barkod işlenemedi');\n      \n      // Event gönder\n      await sendEvent('barcode_fail', { \n        reason: 'server_5xx' \n      });\n    } finally {\n      setRunning(false); // Kilidi aç\n    }\n  };\n\n  // 🔄 3) Barkod seçimi ve işleme\n  const simulateScan = async (barcode) => {\n    if (!checkDebounce()) return;\n    \n    console.log(`🔄 Barkod seçildi: offline=${offline}, Q=${Q}, P=${P}, T=${T}, barcode=${barcode?.code || 'manual'}`);\n    \n    // Modal kapat\n    setIsSimModalOpen(false);\n    \n    // Offline AÇIK iken barkod eklendi → Kuyruk +1\n    if (offline) {\n      const newItem = {\n        id: `barcode-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n        barcode: barcode?.code || 'TEST-12345',\n        timestamp: new Date().toISOString(),\n        status: 'queued',\n        createdAt: new Date().toISOString(),\n        retryCount: 0\n      }\n      \n      // Depoya kaydet\n      const queueData = JSON.parse(localStorage.getItem('offline_queue') || '[]')\n      queueData.push(newItem)\n      localStorage.setItem('offline_queue', JSON.stringify(queueData))\n      \n      // RECALC çalıştır\n      await recalc()\n      \n      eventBus.emit('queue:add');\n      return;\n    }\n    \n    // Online modda simülasyon - API çağrısı yapma\n    setRunning(true); // Kilitleme\n    \n    try {\n      const testBarcode = barcode || { code: 'TEST-12345', valid: true };\n      \n      console.log(`🎯 Barkod simülasyonu: ${testBarcode.code}`);\n      \n      // Simülasyon - işleme süresi (1000ms)\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      if (testBarcode.valid) {\n        // Başarılı → status=done, completedAt=now\n        const newItem = {\n          id: `barcode-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n          barcode: testBarcode.code,\n          timestamp: new Date().toISOString(),\n          status: 'done',\n          createdAt: new Date().toISOString(),\n          completedAt: new Date().toISOString(),\n          retryCount: 0\n        }\n        \n        // Depoya kaydet\n        const queueData = JSON.parse(localStorage.getItem('offline_queue') || '[]')\n        queueData.push(newItem)\n        localStorage.setItem('offline_queue', JSON.stringify(queueData))\n        \n        // RECALC çalıştır\n        await recalc()\n        \n        toast.success(`✅ Barkod işlendi (simülasyon)`);\n        eventBus.emit('barcode:ok', { code: testBarcode.code });\n        \n        // Event gönder\n        await sendEvent('barcode_ok', { \n          code: testBarcode.code, \n          mode: 'online' \n        });\n      } else {\n        // Başarısız: T değişmez (hiçbir şey kaydetme)\n        toast.error('❌ İşlem başarısız (simülasyon)');\n        eventBus.emit('barcode:fail');\n        \n        // Event gönder\n        await sendEvent('barcode_fail', { \n          reason: 'invalid_format' \n        });\n      }\n      \n    } catch (error) {\n      console.error('❌ Barkod simülasyon hatası:', error);\n      toast.error('❌ Simülasyon hatası');\n    } finally {\n      setRunning(false); // Kilidi aç\n    }\n  };\n\n  // Health check fonksiyonu\n  const checkServerHealth = async () => {\n    try {\n      // URL parametresinden test modunu kontrol et\n      const urlParams = new URLSearchParams(window.location.search);\n      const testMode = urlParams.get('test') || 'desktop';\n      \n      let apiBaseUrl;\n      if (testMode === 'mobile' || testMode === 'emulator') {\n        apiBaseUrl = 'http://localhost:3001';\n      } else {\n        apiBaseUrl = 'http://localhost:3001';\n      }\n      \n      console.log(`🏥 Health check: ${apiBaseUrl}/health (testMode: ${testMode})`);\n      const startTime = Date.now();\n      \n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 5000);\n      \n      const response = await fetch(`${apiBaseUrl}/health`, {\n        method: 'GET',\n        signal: controller.signal\n      });\n      \n      clearTimeout(timeoutId);\n      \n      const duration = Date.now() - startTime;\n      \n      if (response.ok) {\n        console.log(`✅ Server health OK: ${duration}ms`);\n        return { success: true, url: apiBaseUrl, duration };\n      } else {\n        console.log(`❌ Server health failed: ${response.status} - ${duration}ms`);\n        return { success: false, url: apiBaseUrl, error: `HTTP ${response.status}`, duration };\n      }\n    } catch (error) {\n      const duration = Date.now() - startTime;\n      console.log(`❌ Server health error: ${error.message} - ${duration}ms`);\n      \n      let errorType = 'UNKNOWN';\n      if (error.name === 'TypeError' && error.message.includes('fetch')) {\n        errorType = 'NETWORK_ERROR';\n      } else if (error.name === 'AbortError') {\n        errorType = 'TIMEOUT';\n      } else if (error.message.includes('DNS')) {\n        errorType = 'DNS_ERROR';\n      }\n      \n      return { \n        success: false, \n        url: apiBaseUrl, \n        error: errorType, \n        duration \n      };\n    }\n  };\n\n  // 🔄 3) Kuyruğu İşle (yalnız offline KAPALI ve Q>0 iken)\n  const processQueue = async () => {\n    if (!checkDebounce()) return;\n    \n    // Kilitleme kontrolü\n    if (running) {\n      console.log('🚫 Kuyruğu İşle blocked: zaten çalışıyor');\n      return;\n    }\n    \n    // Health check önce\n    console.log('🏥 Kuyruğu İşle öncesi health check...');\n    const healthResult = await checkServerHealth();\n    \n    if (!healthResult.success) {\n      const errorMsg = `Sunucuya ulaşılamıyor – ${healthResult.url}/health → ${healthResult.error} (${healthResult.duration}ms)`;\n      console.log(`❌ ${errorMsg}`);\n      toast.error(errorMsg);\n      return;\n    }\n    \n    setRunning(true); // Kilitleme\n    \n    try {\n      console.log(`🔄 Kuyruğu İşle başladı: Q=${Q}, P=${P}, T=${T}`);\n      \n      // Depodan queued kayıtları al\n      const queueData = JSON.parse(localStorage.getItem('offline_queue') || '[]')\n      const queuedItems = queueData.filter(item => item.status === 'queued')\n      \n      if (queuedItems.length === 0) {\n        toast.info('ℹ️ Kuyruk boş');\n        return;\n      }\n      \n      // Her queued kaydı için işle\n      for (const item of queuedItems) {\n        try {\n          // 1) Al (atomik): queued → processing\n          const updatedQueueData = JSON.parse(localStorage.getItem('offline_queue') || '[]')\n          const finalQueueData = updatedQueueData.map(queueItem => {\n            if (queueItem.id === item.id && queueItem.status === 'queued') {\n              return {\n                ...queueItem,\n                status: 'processing',\n                startedAt: new Date().toISOString()\n              }\n            }\n            return queueItem\n          })\n          localStorage.setItem('offline_queue', JSON.stringify(finalQueueData))\n          \n          // RECALC çalıştır\n          await recalc()\n          \n          // 2) Gönder (gerçek API çağrısı)\n          const urlParams = new URLSearchParams(window.location.search);\n          const testMode = urlParams.get('test') || 'desktop';\n          \n          let apiBaseUrl;\n          if (testMode === 'mobile' || testMode === 'emulator') {\n            apiBaseUrl = 'http://localhost:3001';\n          } else {\n            apiBaseUrl = 'http://localhost:3001';\n          }\n          \n          console.log(`📤 Barkod gönderiliyor: ${item.barcode} → ${apiBaseUrl}/api/barcode/scan`);\n          \n          const startTime = Date.now();\n          const response = await fetch(`${apiBaseUrl}/api/barcode/scan`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              barcode: item.barcode,\n              timestamp: item.timestamp,\n              deviceId: 'mobile-app'\n            })\n          });\n          \n          const duration = Date.now() - startTime;\n          console.log(`📡 API yanıtı: ${response.status} (${duration}ms)`);\n          \n          // Response'u parse et\n          const responseData = await response.json();\n          console.log(`📡 API response data:`, responseData);\n          \n          // API sonucuna göre işle (hem HTTP status hem de JSON success)\n          const isSuccess = response.ok && responseData.success;\n          \n          if (isSuccess) {\n            // 200 → status=done, completedAt=now\n            const successQueueData = JSON.parse(localStorage.getItem('offline_queue') || '[]')\n            const finalSuccessData = successQueueData.map(queueItem => {\n              if (queueItem.id === item.id && queueItem.status === 'processing') {\n                return {\n                  ...queueItem,\n                  status: 'done',\n                  completedAt: new Date().toISOString()\n                }\n              }\n              return queueItem\n            })\n            localStorage.setItem('offline_queue', JSON.stringify(finalSuccessData))\n            \n            console.log(`✅ ${item.barcode} başarıyla işlendi`)\n          } else {\n            // 5xx/timeout/ağ → status=queued, retry++\n            const retryQueueData = JSON.parse(localStorage.getItem('offline_queue') || '[]')\n            const finalRetryData = retryQueueData.map(queueItem => {\n              if (queueItem.id === item.id && queueItem.status === 'processing') {\n                return {\n                  ...queueItem,\n                  status: 'queued',\n                  startedAt: null,\n                  retryCount: (queueItem.retryCount || 0) + 1,\n                  lastError: `HTTP ${response.status} (${duration}ms)`\n                }\n              }\n              return queueItem\n            })\n            localStorage.setItem('offline_queue', JSON.stringify(finalRetryData))\n            \n            console.log(`⚠️ ${item.barcode} geçici hata (${response.status}), kuyruğa döndürüldü`)\n            toast.warning(`Sunucuya ulaşılamadı – tekrar denenecek (${(item.retryCount || 0) + 1}/3)`)\n          }\n          \n          // RECALC çalıştır\n          await recalc()\n          \n        } catch (error) {\n          console.error(`❌ ${item.barcode} işleme hatası:`, error)\n          \n          // Hata türünü belirle\n          let errorType = 'UNKNOWN';\n          if (error.name === 'TypeError' && error.message.includes('fetch')) {\n            errorType = 'NETWORK_ERROR';\n          } else if (error.name === 'AbortError') {\n            errorType = 'TIMEOUT';\n          } else if (error.message.includes('DNS')) {\n            errorType = 'DNS_ERROR';\n          }\n          \n          // Hata durumunda queued'a döndür\n          const errorQueueData = JSON.parse(localStorage.getItem('offline_queue') || '[]')\n          const finalErrorData = errorQueueData.map(queueItem => {\n            if (queueItem.id === item.id && queueItem.status === 'processing') {\n              return {\n                ...queueItem,\n                status: 'queued',\n                startedAt: null,\n                retryCount: (queueItem.retryCount || 0) + 1,\n                lastError: `${errorType}: ${error.message}`\n              }\n            }\n            return queueItem\n          })\n          localStorage.setItem('offline_queue', JSON.stringify(finalErrorData))\n          \n          console.log(`⚠️ ${item.barcode} ${errorType} hatası, kuyruğa döndürüldü`)\n          toast.warning(`Sunucuya ulaşılamadı – tekrar denenecek (${(item.retryCount || 0) + 1}/3)`)\n          \n          await recalc()\n        }\n      }\n      \n      toast.success(`🎉 Kuyruk işleme tamamlandı`);\n      \n    } catch (error) {\n      console.error('❌ Kuyruk işleme hatası:', error);\n      toast.error('❌ Kuyruk işleme hatası');\n    } finally {\n      setRunning(false); // Kilidi aç\n    }\n  };\n\n  // 🔄 4) Kuyruğu Temizle (Q > 0 && !running iken)\n  const clearQueue = async () => {\n    if (!checkDebounce()) return;\n    \n    if (running) {\n      console.log('🚫 Kuyruğu Temizle blocked: işlem devam ediyor');\n      return;\n    }\n    \n    console.log(`🔄 Kuyruğu Temizle clicked: Q=${Q}, P=${P}, T=${T}`);\n    \n    if (Q === 0) {\n      toast.info('ℹ️ Kuyruk zaten boş');\n      return;\n    }\n    \n    // Depodan queued ve processing kayıtları temizle\n    const queueData = JSON.parse(localStorage.getItem('offline_queue') || '[]')\n    const filteredData = queueData.filter(item => \n      item.status !== 'queued' && item.status !== 'processing'\n    )\n    localStorage.setItem('offline_queue', JSON.stringify(filteredData))\n    \n    // RECALC çalıştır\n    await recalc()\n    \n    toast.success(`🗑️ Kuyruk temizlendi`);\n  };\n\n  const updateQueueItems = async () => {\n    if (offlineQueue) {\n      const items = await offlineQueue.getQueue();\n      setQueueItems(items);\n      if (onUpdate) onUpdate();\n    }\n  };\n\n  // Initialization - sayaçları senkronize et\n  useEffect(() => {\n    const initializeCounters = async () => {\n      // RECALC çalıştır\n      await recalc();\n      \n      if (offlineQueue) {\n        const queue = await offlineQueue.getQueue();\n        setQueueItems(queue);\n        \n        console.log(`🔄 Initialized: Q=${Q}, P=${P}, T=${T}, offline=${offline}`);\n      }\n    };\n    \n    initializeCounters();\n  }, [offlineQueue]);\n\n  // Cleanup - component unmount olduğunda watchdog'u temizle\n  useEffect(() => {\n    return () => {\n      stopWatchdog();\n    };\n  }, []);\n\n  // Mobil testi bitir fonksiyonu\n  const completeMobileTest = async () => {\n    try {\n      console.log('🏁 Mobil test tamamlanıyor...');\n      \n      // URL parametresinden runId'yi al\n      const urlParams = new URLSearchParams(window.location.search);\n      const runId = urlParams.get('runId');\n      \n      if (!runId) {\n        toast.error('❌ RunId bulunamadı');\n        return;\n      }\n      \n      // 1) mobile_test_completed event'ini gönder\n      await sendEvent('mobile_test_completed', {\n        runId,\n        completedAt: new Date().toISOString(),\n        totalBarcodes: T,\n        successCount: T,\n        failCount: 0\n      });\n      \n      // 2) runs/complete çağrısı yap (HER DURUMDA)\n      await completeRun(runId, T, 0); // successCount, failCount\n      \n      toast.success('✅ Mobil test tamamlandı ve finalize edildi');\n      \n    } catch (error) {\n      console.error('❌ Mobil test bitirme hatası:', error);\n      toast.error('❌ Test tamamlanamadı');\n    }\n  };\n\n  // Test sıfırlama fonksiyonu\n  const resetTest = () => {\n    try {\n      console.log('🔄 Test sıfırlanıyor...');\n      \n      // Sadece yerel state'i temizle, finalize etme\n      localStorage.removeItem('offline_queue');\n      \n      // State'leri sıfırla\n      setQ(0);\n      setP(0);\n      setT(0);\n      setQueueItems([]);\n      \n      toast.info('ℹ️ Test sıfırlandı (finalize edilmedi)');\n      \n    } catch (error) {\n      console.error('❌ Test sıfırlama hatası:', error);\n      toast.error('❌ Test sıfırlanamadı');\n    }\n  };\n\n  // Run finalize fonksiyonu\n  const completeRun = async (runId, successCount, failCount) => {\n    try {\n      const urlParams = new URLSearchParams(window.location.search);\n      const testMode = urlParams.get('test') || 'desktop';\n      \n      let apiBaseUrl;\n      if (testMode === 'mobile' || testMode === 'emulator') {\n        apiBaseUrl = 'http://localhost:3001';\n      } else {\n        apiBaseUrl = 'http://localhost:3001';\n      }\n      \n      const runData = {\n        runId,\n        status: failCount > 0 ? 'failed' : 'success',\n        web: {\n          pass: 0, // Web testi yapılmadı\n          fail: 0,\n          total: 0\n        },\n        mobile: {\n          pass: successCount,\n          fail: failCount,\n          total: successCount + failCount\n        },\n        completedAt: new Date().toISOString(),\n        duration: Date.now() // Basit süre hesaplama\n      };\n      \n      console.log(`🏁 Run finalize ediliyor: ${runId} → ${apiBaseUrl}/api/runs/complete`);\n      \n      const response = await fetch(`${apiBaseUrl}/api/runs/complete`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(runData)\n      });\n      \n      if (response.ok) {\n        console.log(`✅ Run finalize edildi: ${runId}`);\n        return true;\n      } else {\n        console.log(`❌ Run finalize edilemedi: ${response.status}`);\n        return false;\n      }\n      \n    } catch (error) {\n      console.error('❌ Run finalize hatası:', error);\n      return false;\n    }\n  };\n\n  // Event gönderme fonksiyonu\n  const sendEvent = async (type, payload) => {\n    try {\n      // URL parametresinden test modunu kontrol et\n      const urlParams = new URLSearchParams(window.location.search);\n      const testMode = urlParams.get('test') || 'desktop';\n      \n      let apiBaseUrl;\n      if (testMode === 'mobile' || testMode === 'emulator') {\n        apiBaseUrl = 'http://localhost:3001';\n      } else {\n        apiBaseUrl = 'http://localhost:3001';\n      }\n      \n      // RunId'yi URL'den al veya oluştur\n      const runId = urlParams.get('runId') || `run-${Date.now()}`;\n      const eventId = `${runId}-${type}-${Date.now()}`;\n      \n      // Önce run progress'e gönder\n      try {\n        await fetch(`${apiBaseUrl}/api/runs/progress`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            runId,\n            eventType: type,\n            payload,\n            timestamp: new Date().toISOString()\n          })\n        });\n        console.log(`📊 Run progress güncellendi: ${type}`);\n      } catch (progressError) {\n        console.warn('⚠️ Run progress güncellenemedi:', progressError);\n      }\n      \n      // Sonra events endpoint'ine gönder\n      const event = {\n        runId,\n        eventId,\n        type,\n        payload,\n        source: 'mobile'\n      };\n      \n      console.log(`📤 Event gönderiliyor: ${type} → ${apiBaseUrl}/api/events`);\n      \n      const response = await fetch(`${apiBaseUrl}/api/events`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(event)\n      });\n      \n      if (response.ok) {\n        console.log(`✅ Event gönderildi: ${type}`);\n      } else {\n        console.log(`❌ Event gönderilemedi: ${response.status}`);\n      }\n      \n    } catch (error) {\n      console.error('❌ Event gönderme hatası:', error);\n    }\n  };\n\n  // Render logu - her render'da\n  console.log(`🔄 Render: offline=${offline}, Q=${Q}, P=${P}, T=${T}, running=${running}`);\n\n  return (\n    <div className=\"barcode-scanner\">\n      {/* Header */}\n      <div className=\"scanner-header\">\n        <h1 className=\"scanner-title\">Dijital İkiz Tabanlı Test Sistemi</h1>\n        <div className={`status-badge ${offline ? 'offline' : 'online'}`}>\n          {offline ? '📱 Offline' : '🌐 Online'}\n        </div>\n      </div>\n\n      {/* Q/P/T Sayaç Kutucukları - TEK KAYNAKLI STATE */}\n      <div className=\"stats-section\">\n        <div className=\"stats-grid\">\n          <div className=\"stat-card queue\">\n            <div className=\"stat-value\">{Q}</div>\n            <div className=\"stat-label\">Kuyruk</div>\n          </div>\n          <div className=\"stat-card processing\">\n            <div className=\"stat-value\">{P}</div>\n            <div className=\"stat-label\">İşleniyor</div>\n          </div>\n          <div className=\"stat-card total\">\n            <div className=\"stat-value\">{T}</div>\n            <div className=\"stat-label\">Toplam</div>\n            <div className=\"stat-subtitle\">24 saat</div>\n          </div>\n        </div>\n      </div>\n\n\n      {/* Offline Toggle */}\n      <div className=\"toggle-section\">\n        <div className=\"toggle-container\">\n          <span className=\"toggle-label\">Offline Modu</span>\n          <button \n            className={`toggle-btn ${offline ? 'active' : ''}`}\n            onClick={() => setOffline(!offline)}\n          >\n            {offline ? <FaToggleOn /> : <FaToggleOff />}\n          </button>\n        </div>\n      </div>\n\n      {/* Action Buttons - BUTON ETKİNLİK KURALLARI */}\n      <div className=\"action-section\">\n        {(() => {\n          const buttonStates = getButtonStates();\n          return (\n            <>\n              {/* Barkod Tara/Oku */}\n              <button \n                className=\"action-btn primary\"\n                onClick={openBarcodeModal}\n                disabled={buttonStates.scanButton.disabled}\n                title={buttonStates.scanButton.tooltip}\n              >\n                <FaBarcode />\n                Barkod Tara/Oku\n              </button>\n\n              {/* Kuyruğu İşle */}\n              <button \n                className=\"action-btn secondary\"\n                onClick={processQueue}\n                disabled={buttonStates.processButton.disabled}\n                title={buttonStates.processButton.tooltip}\n              >\n                <FaSync className={running ? 'spinning' : ''} />\n                {running ? 'İşleniyor...' : 'Kuyruğu İşle'} ({Q})\n              </button>\n\n              {/* Kuyruğu Temizle */}\n              <button \n                className=\"action-btn danger\"\n                onClick={clearQueue}\n                disabled={buttonStates.clearButton.disabled}\n                title={buttonStates.clearButton.tooltip}\n              >\n                <FaTrash />\n                Kuyruğu Temizle\n              </button>\n\n              {/* Mobil Testi Bitir */}\n              <button \n                className=\"action-btn success\"\n                onClick={completeMobileTest}\n                disabled={running}\n                title=\"Mobil test sürecini tamamla\"\n              >\n                <FaCheck />\n                Mobil Testi Bitir\n              </button>\n\n              {/* Testi Sıfırla */}\n              <button \n                className=\"action-btn warning\"\n                onClick={resetTest}\n                disabled={running}\n                title=\"Testi sıfırla (finalize etmeden)\"\n              >\n                <FaTrash />\n                Testi Sıfırla\n              </button>\n            </>\n          );\n        })()}\n\n      </div>\n\n      {/* Test Barkodları - Modal açıkken gizle */}\n      {!isSimModalOpen && (\n        <div className=\"test-section\">\n          <h2 className=\"section-title\">Test Barkodları</h2>\n          <div className=\"test-grid\">\n            {testBarcodes.map((barcode, index) => (\n              <div \n                key={index}\n                className={`test-card ${barcode.valid ? 'valid' : 'invalid'}`}\n                onClick={() => simulateScan(barcode)}\n                onTouchStart={(e) => {\n                  // iOS için touch feedback\n                  e.currentTarget.style.transform = 'scale(0.95)';\n                }}\n                onTouchEnd={(e) => {\n                  // Touch end'de normal haline dön\n                  setTimeout(() => {\n                    e.currentTarget.style.transform = '';\n                  }, 150);\n                }}\n                style={{\n                  cursor: 'pointer',\n                  WebkitTapHighlightColor: 'transparent'\n                }}\n              >\n                <div className=\"barcode-icon\">\n                  <FaBarcode />\n                </div>\n                <div className=\"barcode-info\">\n                <div className=\"barcode-code\">{barcode.code}</div>\n                <div className=\"barcode-type\">{barcode.type}</div>\n                  <div className={`barcode-status ${barcode.valid ? 'valid' : 'invalid'}`}>\n                    {barcode.valid ? '✅ Geçerli' : '❌ Geçersiz'}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Queue Items */}\n      <div className=\"queue-section\">\n        <h3 className=\"queue-title\">\n          Kuyruk ({queueItems.length})\n        </h3>\n        \n        {queueItems.length === 0 ? (\n          <div className=\"empty-queue\">\n            <FaInfoCircle />\n            <span>Kuyruk boş</span>\n          </div>\n        ) : (\n          <div className=\"queue-list\">\n            {queueItems.map((item, index) => (\n              <div key={item.id} className=\"queue-item\">\n                <div className=\"item-info\">\n                  <span className=\"item-barcode\">{item.data?.barcode || 'N/A'}</span>\n                  <span className=\"item-type\">{item.data?.type || 'scan'}</span>\n                  <span className={`item-status ${item.data?.status || 'pending'}`}>\n                    {item.data?.status === 'pending' && '⏳ Bekliyor'}\n                    {item.data?.status === 'processing' && '🔄 İşleniyor'}\n                    {item.data?.status === 'success' && '✅ Başarılı'}\n                    {item.data?.status === 'error' && '❌ Hatalı'}\n                    </span>\n                  </div>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {/* Uzun kuyruk uyarısı */}\n        {Q >= 100 && (\n          <div className=\"long-queue-warning\">\n            <FaInfoCircle />\n            <span>Kuyruk büyük, arka planda gönderiliyor...</span>\n          </div>\n        )}\n      </div>\n\n      {/* Barkod Simülasyon Modalı */}\n      {isSimModalOpen && (\n        <div className=\"modal-overlay\" onClick={(e) => e.stopPropagation()}>\n          <div className=\"modal\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h4>Barkod Simülasyonu</h4>\n              <button \n                className=\"modal-close\"\n                onClick={() => setIsSimModalOpen(false)}\n              >\n                ×\n              </button>\n            </div>\n            \n            <div className=\"modal-content\">\n              {/* Geçerli Barkod Üret */}\n              <div className=\"simulation-option\">\n                <button \n                  className=\"sim-btn primary\"\n                  onClick={() => simulateScan({ code: 'ULD-AKE12345AB', valid: true })}\n                >\n                  Geçerli Barkod Üret\n                </button>\n                <p className=\"sim-desc\">Rastgele geçerli format barkod üretir</p>\n              </div>\n\n              {/* Geçersiz Barkod Üret */}\n              <div className=\"simulation-option\">\n                <button \n                  className=\"sim-btn secondary\"\n                  onClick={() => simulateScan({ code: 'INVALID-CODE', valid: false })}\n                >\n                  Geçersiz Barkod Üret\n                </button>\n                <p className=\"sim-desc\">Negatif test için geçersiz barkod üretir</p>\n              </div>\n\n              {/* Hazır Barkodlardan Seç */}\n              <div className=\"simulation-option\">\n                <h5>Hazır Barkodlardan Seç</h5>\n                <div className=\"barcode-list\">\n                  {testBarcodes.map((barcode, index) => (\n                    <div \n                      key={barcode.code}\n                      className={`barcode-item ${barcode.valid ? 'valid' : 'invalid'}`}\n                      onClick={() => simulateScan(barcode)}\n                    >\n                      <span className=\"barcode-code\">{barcode.code}</span>\n                      <span className=\"barcode-type\">{barcode.type}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Mobil Testi Butonu */}\n              <div className=\"simulation-option\">\n                <button \n                  className=\"sim-btn test\"\n                  onClick={() => {\n                    setIsSimModalOpen(false);\n                    runMobileTest();\n                  }}\n                >\n                  <FaMobile />\n                  Mobil Testi Başlat\n                </button>\n                <p className=\"sim-desc\">Otomatik test senaryosunu çalıştırır</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Temizleme Onay Modalı */}\n      {showClearModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal\">\n            <h4>Kuyruğu temizle</h4>\n            <p>Kuyrukta <strong>{Q}</strong> kayıt var. Bu işlem geri alınamaz.</p>\n            {P > 0 && (\n              <div className=\"warning-text\">\n                ⚠️ Şu anda {P} barkod işleniyor. İşlemi durdurup kuyruğu temizlemek istiyor musunuz?\n              </div>\n            )}\n            <div className=\"modal-buttons\">\n              <button \n                className=\"btn btn-secondary\"\n                onClick={() => setShowClearModal(false)}\n              >\n                Vazgeç\n              </button>\n              <button \n                className=\"btn btn-danger\"\n                onClick={() => {\n                  clearQueue();\n                  setShowClearModal(false);\n                }}\n              >\n                {P > 0 ? 'Evet, durdur ve sil' : 'Evet, temizle'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Mobil Testini Bitir Butonu */}\n      <div className=\"mobile-test-complete-section\">\n        <button \n          className=\"mobile-test-complete-btn\"\n          onClick={handleMobileTestComplete}\n          disabled={workerState !== 'idle'}\n          title={workerState !== 'idle' ? 'İşlem devam ediyor' : 'Mobil testini bitir ve sonuçları gönder'}\n        >\n          <FaExclamationTriangle />\n          Mobil Testini Bitir\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default BarcodeScanner;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}